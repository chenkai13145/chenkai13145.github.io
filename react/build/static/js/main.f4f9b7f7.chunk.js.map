{"version":3,"sources":["redux/reducer/custer/custereducer.js","redux/reducer/case/caseducer.js","redux/reducer/login/login.js","redux/reducer/index.js","redux/action/type.js","redux/store/index.js","components/common/proviteRouter.js","until/request.js","api/user/user.js","until/jsonp.js","components/header/index.js","components/footer/index.js","data/menu/menuConfig.js","components/navleft/index.js","layout.js","views/login/index.js","redux/action/login/login.js","views/404/index.js","App.js","views/home/index.js","views/ui/buttons/index.js","views/ui/alert/index.js","views/ui/loadings/index.js","views/ui/messages/index.js","views/ui/notification/index.js","views/ui/tabs/index.js","views/form/login/index.js","views/form/reg/index.js","views/table/tables/index.js","api/axios.js","views/city/model/from/index.js","views/city/index.js","api/city/city.js","views/order/model/from/index.js","views/order/index.js","api/order/order.js","common.js","views/order/derail.js","views/user/modal/form.js","views/user/index.js","views/bikemap/form/form.js","views/bikemap/index.js","api/bikemap/bikemap.js","views/rich/index.js","until/untils.js","views/permission/modal/add.js","views/permission/modal/edit.js","views/permission/modal/author.js","views/permission/index.js","api/permission/permission.js","components/echarts/bar.js","views/echarts/index.js","views/Lawyer/home/index.js","views/Lawyer/team/index.js","redux/action/case/case.js","components/alert/index.js","views/Lawyer/component/case/tablelist.js","views/Lawyer/component/case/modal.js","views/Lawyer/component/case/draw.js","views/Lawyer/case/index.js","api/case/caseapi.js","redux/action/custer/custer.js","views/Lawyer/component/custer/forms.js","api/custer/custer.js","views/Lawyer/custer/index.js","router/index.js","serviceWorker.js","index.js"],"names":["initStateVal","cust","initCaeVal","case","loginUser","auth","localStorage","getItem","infoUser","date","reducer","combineReducers","custer","state","arguments","length","undefined","action","type","Object","objectSpread","playload","caseter","loginReducer","appmiddle","thunk","store","createStore","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","connect","_ref","Component","component","rest","objectWithoutProperties","_react_16_8_6_react_default","a","createElement","react_router","assign","render","props","to","axiosService","axios","create","defaults","timeout","headers","common","baseURL","interceptors","request","use","config","Date","getTime","removeItem","setTimeout","location","reload","message_default","error","Promise","reject","response","addUser","data","method","params","datas","url","Axios","resolve","Jsonp","param","err","res","Header","name","dtime","wether","_this2","this","setInterval","dt","time","concat","getFullYear","getMonth","toString","padStart","getDay","getHours","getMinutes","getSeconds","setState","weatherfn","_this3","jsonp","encodeURIComponent","then","console","log","menuType","className","style","cursor","onClick","item","valHeader","React","Footer","menuList","title","key","children","SubMenu","menu_default","Navleft","ItemGroup","menuLists","Headertitle","_this","layout","menuListfn","map","Item","react_router_dom","hash","replace","split","src","selectedKeys","theme","mode","Layout","sessionStorage","changeMenuVal","val","setItem","row_default","col_default","span","navleft_Navleft","header_Header","footer_Footer","NormalLoginForm","handleSubmit","e","preventDefault","form","validateFields","values","username","password","postLogin","history","getFieldDecorator","layoutCol","labelCol","wrapperCol","form_default","onSubmit","label","rules","required","message","input_default","prefix","icon_default","color","placeholder","button_default","htmlType","WrappedNormalLoginForm","dispatch","login","success","push","catch","Nofound","App","Home","ButtonGroup","Group","Buttons","loading","size","handleSizeChange","target","value","card_default","marginBottom","icon","shape","handcoseloading","bind","margin","radio_default","onChange","Alert","alert1","alert2","showModal","_this$setState","_type","slicedToArray","al","defineProperty","handleOk","handleCancel","modal_default","visible","onOk","onCancel","Loadings","toggle","spin_default","spinning","alert_default","description","Messages","info","warning","Notifications","openNotificationWithIcon","notification_default","openNotification","open","TabPane","tabs_default","Tabss","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleModeChange","Button","defaultActiveKey","tabPosition","height","tab","Logins","_this$props$form","getFieldError","isFieldTouched","usernameError","passwordError","id","validateStatus","help","valuePropName","initialValue","checkbox_default","float","Option","AutoCompleteOption","auto_complete_default","RegistrationForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","domain","tailFormItemLayout","xs","offset","sm","prefixSelector","select_default","width","websiteOptions","website","maxWidth","validator","onBlur","tooltip_default","whitespace","addonBefore","dataSource","getValueFromEvent","normFile","upload_default","Dragger","href","Regs","Tables","data2","selectedRowKeys","rowdata","selectedRowKeys2","rowdata2","onRowClick","record","index","check","rr","status","code","result","list","rowSelection","rowSelection2","selectedRows","userName","sex","interest","address","birthday","columns","dataIndex","table_default","pagination","onRow","footer","expandedRowRender","FormItem","FilterForm","submits","subMit","from_Option","resetFields","Citys","page","city_id","op_mode","ops_mode","pageSize","openShow","total","current","showTotal","range","showSizeChanger","onShowSizeChange","datainit","item_list","total_count","page_size","subMits","handOpenCity","citydata","cityFrom","getFieldsValue","city_admins","user_name","join","update_time","from_FilterForm","marginTop","FilterFromOpens","wrappedComponentRef","ins","FilterFromOpen","formItemLayout","textAlign","city_Option","FilterFrom","submitOrder","orderfn","from_FormItem","model_from_Option","date_picker_default","showTime","format","Orders","pageSizeOptions","requestList","showvisible","infoorder","headerfrom","endfinsh","confirm","content","detail","fromitemLayout","from_FilterFrom","order_FormItem","bike_sn","battery","start_time","Commons","Derails","renderMap","BMap","Map","centerAndZoom","addmapcontrol","drawbikerouter","position_list","drawbikerArae","area","addControl","NavigationControl","anchor","BMAP_ANCHOR_TOP_LEFT","ScaleControl","OverviewMapControl","MapTypeControl","setCurrentCity","positionList","startPoint","endPoint","arr","Point","lon","lat","startIcon","Icon","Size","imageSize","startmark","Marker","addOverlay","arrend","endIcon","endmark","trackPoint","i","point","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","polygon","Polygon","fillColor","orderId","match","padding","derail_FormItem","display","clear","order_sn","mobile","start_location","end_location","distance","TextArea","RadioGrounp","layoutwiith","userinfo","form_FormItem","form_Option","moment","row","locale","Users","userList","infoAction","_that","assertThisInitialized","obj","handOk","userForm","userFind","user_FormItem","locale_provider_default","zh_CN","1","2","3","4","5","6","7","8","9","form_FilterForm","RangePicker","handSubmit","findBike","form_form_FormItem","form_form_Option","typr","BikeMaps","route_list","bikeMarkerstart","bikeMarkerend","routelist","forEach","pointLine","severpointList","service_list","pointseverLine","bikelist","bike_list","bikeIcon","bikepointlist","bikelistmarker","form_form_FilterForm","Richs","onEditorStateChange","editorState","getHtml","editorContent","draftToHtml","convertToRaw","getCurrentContent","EditorState","createEmpty","nextProps","getSysResult","contentBlock","htmlToDraft","roomnotes","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","dist_react_draft_wysiwyg","toolbarClassName","wrapperClassName","editorClassName","formatDate","n","y","r","s","f","m","Adds","add_FormItem","add_Option","TreeNode","Edits","renderMenuTree","userInfo","edit_FormItem","disabled","edit_Option","tree_default","checkable","checkedKeys","onCheck","patchMenuInfo","Authors","filterOption","inputValue","option","indexOf","handleChange","targetKeys","settargetKeys","AuthorInfo","author_FormItem","transfer_default","AuthorList","titles","showSearch","Permissions","visible1","visible2","visible3","addForm","RoleCreate","handleOkedit","userEdits","role_id","menu","RoleEdit","handleOkAuthor","user_ids","editUser","AuthorUser","getAuthors","dtat","mockData","user_id","create_time","authorize_time","menus","role_name","add_Adds","edit_Edits","author_Authors","userAuthors","EchartsTest","echartsVal","myChart","ininBar","echarts","init","document","getElementById","idount","showLoading","backgroundColor","setOption","getOption","hideLoading","Math","random","substring","addEventListener","resize","Line","text","tooltip","xAxis","yAxis","series","registerTheme","echarts_bar","LawyerHome","LawyerTeam","delete","splice","number","team_FormItem","position","bottom","paddingBottom","extra","AlertCom","link","choose","showIcon","tablelist","platform","version","upgradeNum","creator","createdAt","badge_default","dropdown_default","overlay","ModalLeft","close","visibleclose","drawer_default","onClose","hideRequiredMark","gutter","justify","modal_TextArea","rows","case_tablelist","left","borderTop","background","marginRight","DrawModal","draw_DrawTop","draw_DrawCenter","draw_DrawBottom","DrawTop","draw_FormItem","draw_TextArea","DrawCenter","layoutItem","switch_default","DrawBottom","directory","LawyerCase","changePagination","filters","sorter","getCaseList","showQuickJumper","visibles","casedata","oldProps","caseList","newval","align","t","parseInt","FormValues","src_components_alert","case_modal","draw","FormValue","show","_this4","case_FormItem","FormCuster","myName","setFieldsValue","handleEditOk","addCuster","onRef","layoutBable","ref","child","handleEdit","restVal","inputVal","custitem","custlist","getcusterlist","custer_FormValues","custer_forms","custer_FormItem","getCuster","src_App_0","path","Login","common_Commons","proviteRouter","layout_Layout","Modals","Tabs","Echarts","LawyerCuster","NOfound","Boolean","hostname","getState","ReactDOM","es","router_default","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4f9b7f7.chunk.js","sourcesContent":["import {GET_CUSTERLIST} from '../../action/type'\r\nconst initStateVal={\r\n    cust:{},\r\n}\r\nexport default (state=initStateVal,action)=>{\r\n    switch (action.type) {\r\n        case GET_CUSTERLIST:\r\n           return{\r\n               ...state,\r\n               cust:action.playload\r\n           }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","import {GET_CASE} from '@/redux/action/type'\r\nlet initCaeVal={\r\n    case:{}\r\n}\r\nexport default (state=initCaeVal,action)=>{\r\n    switch(action.type){\r\n        case GET_CASE:\r\n            return{\r\n                ...state,\r\n                case:action.playload\r\n            }\r\n        default:\r\n            return{\r\n                ...state\r\n            }\r\n    }\r\n}","import {POST_LOGIN} from '@/redux/action/type'\r\nlet loginUser={\r\n    auth:localStorage.getItem('token')?true:false,\r\n    infoUser:{},\r\n    date:''\r\n}\r\nexport default (state=loginUser,action)=>{\r\n      switch(action.type){\r\n          case POST_LOGIN:\r\n              return{\r\n                  ...state,\r\n                  auth:action.playload,\r\n                  date:action.date\r\n              }\r\n          default:\r\n              return{\r\n                  ...state\r\n              }\r\n      }\r\n}","import {combineReducers} from 'redux'\r\nimport custerReducer from './custer/custereducer'\r\nimport caseReducer from './case/caseducer'\r\nimport loginReducer from './login/login'\r\n\r\nconst reducer=combineReducers({\r\n    custer:custerReducer,\r\n    caseter:caseReducer,\r\n    loginReducer\r\n})\r\nexport default reducer;","const GET_CUSTERLIST=\"GET_CUSTERLIST\"\r\nconst GET_CASE=\"GET_CASE\"\r\nconst POST_LOGIN=\"POST_LOGIN\"\r\nconst OUT_LOGIN='OUT_LOGIN'\r\nexport{GET_CUSTERLIST,GET_CASE,POST_LOGIN,OUT_LOGIN}","import { compose, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from '../reducer'\r\nconst initStore = {\r\n}\r\nconst appmiddle = [thunk]\r\n\r\nconst store = createStore(reducer, initStore, compose(applyMiddleware(...appmiddle), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\r\n\r\nexport default store","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport { PropTypes } from 'prop-types'\r\nconst PrivateRoute = ({ component: Component, auth,...rest }) => (\r\n    <Route\r\n       {...rest}\r\n        render={\r\n        (props) =>\r\n        (auth=== true\r\n        ? <Component {...props} />\r\n        : <Redirect to='/login' />\r\n    )} />\r\n  )\r\n  PrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  }\r\nconst mapStateToProps = state => ({\r\n    auth: state.loginReducer.auth\r\n})\r\n  export  default  connect(mapStateToProps)(PrivateRoute);","import axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\n\r\n\r\nconst axiosService = axios.create();\r\n// if(process.env.NODE_ENV=='development'){\r\n       \r\n// }\r\n\r\naxiosService.defaults.timeout = 5000;\r\naxiosService.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\r\n// axiosService.defaults.baseURL='https://www.easy-mock.com/mock/5a7278e28d0c633b9c4adbd7/api/'\r\naxiosService.defaults.baseURL='https://www.easy-mock.com/mock/5d01db9b61dd9e4ba61e2117/reacts/'\r\naxiosService.interceptors.request.use(\r\n    (config) => {\r\n        let nowdate=new Date().getTime()\r\n        let olddate=localStorage.getItem('date')\r\n        if(nowdate>olddate){\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('date')\r\n            setTimeout(()=>{\r\n               window.location.reload()\r\n            },3000)\r\n            message.error('登录已过时，请重新登录')\r\n        }\r\n        // if (config.data && config.data.$skipAuthHandler) {\r\n        //     config.$skipAuthHandler = true;\r\n        //     delete config.data.$skipAuthHandler;\r\n        // }\r\n        // if (config.params && config.params.$skipAuthHandler) {\r\n        //     config.$skipAuthHandler = true;\r\n        //     delete config.params.$skipAuthHandler;\r\n        // }\r\n        // config.headers.Authorization = getAuthorization();\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error)\r\n    }\r\n);\r\n\r\naxiosService.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        // const err = error.response;\r\n        // if (err.status === 401 && !! config.data && !config.data.$skipAuthHandler) {\r\n        //     user.clear();\r\n        //     window.location = '/unauthorization';\r\n        // }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosService;","import request from '../../until/request'\r\nexport function getUserlist(data){\r\n    return request({\r\n        method:'get',\r\n        params:data,\r\n        url:'table/list1'\r\n    })\r\n}\r\nexport function addUser(data){\r\n    return request({\r\n        method:'get',\r\n        params:data.datas,\r\n        url:data.url\r\n    })\r\n}\r\n\r\nexport function login(data){\r\n    return request({\r\n        url:'/login',\r\n        method:'post',\r\n        data,\r\n    })\r\n}","import Jsonp from 'jsonp'\r\nexport default class Axios{\r\n   static jsonp(data){\r\n       return new Promise((resolve,reject)=>{\r\n           Jsonp(data.url,{\r\n               param:'callback'\r\n           },function(err,res){\r\n                      resolve(res)\r\n                       reject(err)\r\n           })\r\n       })\r\n   }\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {outLogin} from '@/redux/action/login/login'\r\nimport './index.less'\r\nimport axios from '../../until/jsonp.js'\r\nexport default class Header extends React.Component {\r\n    state={\r\n        name:\"陈凯大大\",\r\n        dtime:'',\r\n        wether:\"天气晴朗\"\r\n    }\r\n    componentWillMount(){\r\n      setInterval(()=>{\r\n        var dt=''\r\n        let time=new Date()\r\n         dt=`${time.getFullYear()}-${(time.getMonth()+1).toString().padStart(2,'0')}-${time.getDay().toString().padStart(2,'0')} ${time.getHours().toString().padStart(2,'0')}:${time.getMinutes().toString().padStart(2,'0')}:${time.getSeconds().toString().padStart(2,'0')}`\r\n        this.setState({\r\n            dtime:dt\r\n        })\r\n        },1000)\r\n      this.weatherfn(); \r\n   }\r\n    weatherfn(){\r\n        let city='北京';\r\n        axios.jsonp({ \r\n            url:'http://api.map.baidu.com/telematics/v3/weather?location='+encodeURIComponent(city)+'&output=json&ak=hlyVsmlBI879lfO0tkYCt5F8IlUaTk7i'\r\n        }).then(res=>this.setState({wether:res}))\r\n    }\r\n    componentWillReceiveProps(props){\r\n          console.log(props)\r\n    }\r\n    render() {\r\n        const menuType=this.props.menuType\r\n        return (\r\n            <div className='header'>\r\n                <div className=\"top\">\r\n                    <div style={{cursor: 'pointer'}} onClick={()=>{\r\n                        localStorage.removeItem('token')\r\n                        window.location.reload()\r\n                    }}>推出</div>\r\n                    <div>\r\n                        <span>欢迎，</span>\r\n                        <span>{this.state.name}</span>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    menuType?'':<div className=\"bottom\">\r\n                    <div>\r\n                        { this.props.item!=\"首页\"?this.props.item:this.props.valHeader}\r\n                    </div>\r\n                    <div>\r\n                        <span>{this.state.dtime}</span>\r\n                        <span>{this.state.wether}</span>\r\n                    </div>\r\n               </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nexport default class Footer extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"footer\">\r\n                     c1263455889@qq.com授权www.baidu.com react\r\n            </div>\r\n        )\r\n    }\r\n}","const menuList = [\r\n    {\r\n        title: '首页',\r\n        key: '/home'\r\n    },\r\n    {\r\n        title: 'UI',\r\n        key: '/ui',\r\n        children: [\r\n            {\r\n                title: '按钮',\r\n                key: '/ui/buttons',\r\n            },\r\n            {\r\n                title: '弹框',\r\n                key: '/ui/modals',\r\n            },\r\n            {\r\n                title: 'Loading',\r\n                key: '/ui/loadings',\r\n            },\r\n            {\r\n                title: '通知提醒',\r\n                key: '/ui/notification',\r\n            },\r\n            {\r\n                title: '全局Message',\r\n                key: '/ui/messages',\r\n            },\r\n            {\r\n                title: 'Tab页签',\r\n                key: '/ui/tabs',\r\n            },\r\n            {\r\n                title: '图片画廊',\r\n                key: '/ui/gallery',\r\n            },\r\n            {\r\n                title: '轮播图',\r\n                key: '/ui/carousel',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表单',\r\n        key: '/form',\r\n        children: [\r\n            {\r\n                title: '登录',\r\n                key: '/form/login',\r\n            },\r\n            {\r\n                title: '注册',\r\n                key: '/form/reg',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '表格',\r\n        key: '/table',\r\n        children: [\r\n            {\r\n                title: '基础表格',\r\n                key: '/table/basic',\r\n            },\r\n            {\r\n                title: '高级表格',\r\n                key: '/table/high',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: '富文本',\r\n        key: '/rich'\r\n    },\r\n    {\r\n        title: '城市单车管理平台',\r\n        key: '/citys',\r\n        children:[\r\n            {\r\n                title: '订单管理',\r\n                key: '/order',\r\n            },\r\n            {\r\n                title: '城市管理',\r\n                key: '/city',\r\n            },\r\n            {\r\n                title: '员工管理',\r\n                key: '/user'\r\n            },\r\n            {\r\n                title: '车辆地图',\r\n                key: '/bikeMap'\r\n            },\r\n        ]\r\n    },\r\n\r\n\r\n    {\r\n        title: '受理平台',\r\n        key: '/ims',\r\n        children:[\r\n            {\r\n                title: '全业务受理日志',\r\n                key: '/order',\r\n            },\r\n            {\r\n                title: 'ims',\r\n                key: '/user'\r\n            },\r\n            {\r\n                title: '集中集客受理日志',\r\n                key: '/bikeMap'\r\n            },\r\n        ]\r\n    },\r\n\r\n    {\r\n        title: '律师行业管理平台',\r\n        key: '/lvshi',\r\n        children:[\r\n            {\r\n                title: '首页',\r\n                key: '/lawyer/home',\r\n            },\r\n            {\r\n                title: '团队管理',\r\n                key: '/lawyer/team'\r\n            },\r\n            {\r\n                title: '收案',\r\n                key: '/lawyer/case'\r\n            },\r\n            {\r\n                title: '客户',\r\n                key: '/lawyer/custer'\r\n            },\r\n        ]\r\n    },\r\n   \r\n    {\r\n        title: '图标',\r\n        key: '/charts',\r\n        children: [\r\n            {\r\n                title: '柱形图',\r\n                key: '/charts/bar'\r\n            },\r\n            {\r\n                title: '饼图',\r\n                key: '/charts/pie'\r\n            },\r\n            {\r\n                title: '折线图',\r\n                key: '/charts/line'\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: '权限设置',\r\n        key: '/permission'\r\n    },\r\n];\r\nexport default menuList;","import React from 'react'\r\nimport menuList from '../../data/menu/menuConfig'\r\nimport { Menu, Icon } from 'antd';\r\nimport {NavLink} from 'react-router-dom'\r\nimport './index.less'\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\n\r\nexport default class Navleft extends React.Component {\r\n    state = {\r\n        menuLists: [],\r\n        key:'/home'\r\n    }\r\n    componentWillMount() {\r\n        this.setState({\r\n            menuLists: this.menuListfn(menuList)\r\n        }) \r\n    }\r\n    Headertitle=(item)=>{\r\n        this.props.layout(item.title)\r\n    }\r\n    // 菜单循环\r\n    menuListfn=(data)=>{\r\n      return data.map(item => {\r\n            if(item.children) {\r\n                return (<SubMenu key={item.key} title={item.title}>{this.menuListfn(item.children)}</SubMenu>)\r\n            }\r\n            return <Menu.Item key={item.key}>\r\n                      <NavLink to={item.key} onClick={()=>this.Headertitle(item)}>{item.title}</NavLink>\r\n                   </Menu.Item>\r\n        })\r\n       \r\n    }\r\n    render() {\r\n        let url=window.location.hash.replace('#','').split('?')[0]\r\n        return (\r\n            <div className=\"navleft\">\r\n            <div className='logo'>\r\n                 <span><img src=\"/assets/logo-ant.svg\"/></span>\r\n                 <span>antd</span>\r\n            </div>\r\n            <Menu selectedKeys={[url]} theme=\"dark\" mode=\"vertical\">\r\n                {this.state.menuLists}\r\n            </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Row, Col } from 'antd'\r\nimport Header from './components/header'\r\nimport Footer from './components/footer'\r\nimport Navleft from './components/navleft'\r\nimport './style/common.less'\r\n\r\n\r\n\r\nexport default class Layout extends React.Component{\r\n    state={\r\n        valHeader:sessionStorage.getItem('valHeader') || '首页',\r\n        item:'首页'\r\n    }\r\n    changeMenuVal=(val)=>{\r\n        this.setState({\r\n            valHeader:sessionStorage.setItem('valHeader',val),\r\n            item:val\r\n        })\r\n    }\r\n    \r\n   render(){\r\n       return(\r\n                <Row className='contair'>\r\n                    <Col span={3} className='navleft'>\r\n                      <Navleft layout={this.changeMenuVal}/>\r\n                    </Col>\r\n                    <Col span={21} className=\"main\">\r\n                         <Col className='header'>\r\n                            <Header item={this.state.item} valHeader={this.state.valHeader}/>\r\n                         </Col>\r\n                         <Row className=\"content\">\r\n                             {this.props.children}\r\n                         </Row>\r\n                         <Col className=\"footer\">\r\n                             <Footer/>\r\n                         </Col>\r\n                    </Col>\r\n                </Row>\r\n       )\r\n   }\r\n}","import React from 'react'\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport {connect} from 'react-redux'\r\nimport {postLogin} from '@/redux/action/login/login'\r\nimport './idnex.less'\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if(values.username==='陈凯' && values.password==='654321'){\r\n           this.props.postLogin(this.props.history)\r\n           localStorage.setItem('date',new Date().getTime()+60*60*1000)\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const layoutCol={\r\n        labelCol:{\r\n            span:8\r\n        },\r\n        wrapperCol:{\r\n            span:16\r\n        }\r\n    }\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} layout='horizontal' className=\"login\">\r\n        <Form.Item {...layoutCol} label='用户名'>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"陈凯\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item {...layoutCol} label=\"密码\">\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"654321\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            登录\r\n          </Button>\r\n         \r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n          auth:state.loginReducer.auth\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps,{postLogin})(WrappedNormalLoginForm)","import {POST_LOGIN} from '../type'\r\nimport {login} from '@/api/user/user'\r\nimport {message} from 'antd'\r\nimport { Date } from 'core-js';\r\n\r\n\r\nexport const postLogin=(data)=>(dispatch)=>{\r\n    login().then(res=>{\r\n        if(res.data.message==='成功'){\r\n        \r\n            dispatch({\r\n                type:POST_LOGIN,\r\n                playload:res.data.auth,\r\n                date:new Date().getTime()+60*60*1000\r\n            })\r\n            message.success('登录成功')\r\n            localStorage.setItem('token',\"Bearer YjdhdjsstelwlHhdfkflasdKDLUGhGFGFjdsakdhVCVBNdhjdgsdjashjdsa\")\r\n            data.push('/home')\r\n        }\r\n    })\r\n    .catch(err=>{\r\n        message.error('网络出现问题，请检查网络')\r\n    })\r\n}\r\n","import React from 'react'\r\nexport default class Nofound extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>404</div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport './App.less';\r\n// import Layouts from './layout';\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n  return (\r\n    <div>\r\n       {/* <Layouts></Layouts> */}\r\n       {this.props.children}\r\n    </div>\r\n  )\r\n}\r\n}\r\nconst mapStateToProps=(state)=>{\r\n  return{\r\n    date:state.loginReducer.date\r\n  }\r\n}\r\nexport default connect()(App);\r\n","import React from 'react'\r\nexport default class Home extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>首页</div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Button,Card,Icon,Radio} from 'antd'\r\nimport './index.less'\r\nconst ButtonGroup = Button.Group;\r\nexport default class Buttons extends React.Component{\r\n    state={\r\n        loading:true,\r\n        size:'small'\r\n    }\r\n    handcoseloading(){\r\n        \r\n        this.setState({\r\n            loading:!this.state.loading\r\n        })\r\n    }\r\n    handleSizeChange=(e)=>{\r\n           this.setState({\r\n               size:e.target.value\r\n           })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{marginBottom:20}} title=\"基础按钮\" >\r\n                  <Button type=\"primary\">kai antd</Button>\r\n                  <Button>kai antd</Button>\r\n                  <Button type=\"dashed\">kai antd</Button>\r\n                  <Button type=\"danger\">kai antd</Button>\r\n                </Card>\r\n                <Card style={{marginBottom:20}} title=\"图行按钮\"  >\r\n                  <Button icon=\"plus\">创建</Button>\r\n                  <Button icon=\"edit\">编辑</Button>\r\n                  <Button icon=\"delete\">删除</Button>\r\n                  <Button icon=\"search\" shape=\"circle\"></Button>\r\n                  <Button type=\"primary\" icon=\"download\">下载</Button>\r\n                  <Button type=\"primary\" icon=\"search\">搜素</Button>\r\n                </Card>\r\n                <Card style={{marginBottom:20}} title=\"Loading按钮\"  >\r\n                  <Button type=\"primary\" loading={this.state.loading} >确定</Button>\r\n                  <Button type=\"primary\" shape=\"circle\" loading={this.state.loading} ></Button>\r\n                  <Button loading={this.state.loading}>点击加载</Button>\r\n                  <Button shape=\"circle\" loading={this.state.loading}></Button>\r\n                  <Button onClick={this.handcoseloading.bind(this)}>{this.state.loading?'关闭':'加载'}</Button>\r\n                </Card>\r\n                <Card style={{marginBottom:20}} title=\"按钮组\" >\r\n                <ButtonGroup>\r\n                     <Button type=\"primary\" style={{margin:0}}>\r\n                     <Icon type=\"left\" />返回\r\n                     </Button>\r\n                     <Button type=\"primary\" style={{margin:0}}>\r\n                         前进<Icon type=\"right\" />\r\n                     </Button>\r\n                </ButtonGroup> \r\n                </Card>\r\n                <Card style={{marginBottom:20}} title=\"按钮尺寸\" >\r\n                 <Radio.Group value={this.state.size} onChange={this.handleSizeChange}>\r\n                     <Radio value=\"large\">大</Radio>\r\n                     <Radio value=\"default\">中</Radio>\r\n                     <Radio value=\"small\">小</Radio>\r\n                 </Radio.Group>\r\n                 <Button size={this.state.size} type=\"primary\">kai antd</Button>\r\n                  <Button size={this.state.size}>kai antd</Button>\r\n                  <Button size={this.state.size} type=\"dashed\">kai antd</Button>\r\n                  <Button size={this.state.size} type=\"danger\">kai antd</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Modal, Button,Card } from 'antd';\r\nexport default class Alert extends React.Component{\r\n    state={\r\n        alert1:false,\r\n        alert2:false,\r\n        title:''\r\n    }\r\n    showModal=(type)=>{\r\n        let [key,al]=type\r\n        this.setState({\r\n             [al]:!this.state.al,\r\n             title:key\r\n        })\r\n    }\r\n    handleOk = (e) => {\r\n        console.log(e);\r\n        this.setState({\r\n            alert1: false,\r\n            alert2: false,\r\n        });\r\n      }\r\n    \r\n    handleCancel = (e) => {\r\n        console.log(e);\r\n        this.setState({\r\n            alert1: false,\r\n            alert2: false,\r\n        });\r\n      }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{marginBottom:20}} title=\"基础模态框\" >\r\n                 <Button type=\"primary\" onClick={()=>this.showModal(['基本弹窗','alert1'])}>\r\n                    基本弹窗\r\n                 </Button>\r\n                 <Button onClick={()=>this.showModal(['异步弹窗','alert2'])}>\r\n                    异步弹窗\r\n                 </Button>\r\n                </Card>\r\n                <Modal\r\n                  title={this.state.title}\r\n                  visible={this.state.alert1 ||this.state.alert2}\r\n                   onOk={this.handleOk}\r\n                   onCancel={this.handleCancel}\r\n                 >\r\n                  <p>Some contents...</p>\r\n                  <p>Some contents...</p>\r\n                  <p>Some contents...</p>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Spin, Alert, Switch,Button,Card } from 'antd';\r\nexport default class Loadings extends React.Component{\r\n    state={\r\n        loading:false\r\n    }\r\n    toggle=(e)=>{\r\n        this.setState({\r\n            loading:e\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                 <Card style={{marginBottom:20}} title=\"loading加载\" >\r\n                 <Button onClick={()=>this.toggle(true)}  type=\"primary\">\r\n                    loading\r\n                 </Button>\r\n                 <Button onClick={()=>this.toggle(false)}>\r\n                    关闭loading\r\n                 </Button>\r\n                </Card>\r\n                <Spin spinning={this.state.loading}>\r\n                 <Alert\r\n                      message=\"Alert message title\"\r\n                       description=\"Further details about the context of this alert.\"\r\n                    type=\"info\"\r\n                     />\r\n                 </Spin>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { message, Button,Card } from 'antd';\r\nexport default class Messages extends React.Component{\r\n    toggle=()=>{\r\n        message.info('This is a 消息全局');\r\n    }\r\n    success = () => {\r\n        message.success('This is a message of 成功自定义时长',10);\r\n      }\r\n      \r\n    error = () => {\r\n        message.error('This is a message of 错误');\r\n      }\r\n      \r\n    warning = () => {\r\n        message.warning('This is message of 警告');\r\n      }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{marginBottom:20}} title=\"全局消息提示\" >\r\n                 <Button onClick={this.toggle}  type=\"primary\">\r\n                    基本消息提示\r\n                 </Button>\r\n                 <Button onClick={this.success}>成功10s</Button>\r\n                 <Button onClick={this.error}>错误</Button>\r\n                 <Button onClick={this.warning}>警告</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Button, notification,Card } from 'antd';\r\nexport default class Notifications extends React.Component{\r\n    state={\r\n        key:'updatable'\r\n    }\r\n    openNotificationWithIcon = (type) => {\r\n        notification[type]({\r\n          message: 'Notification Title',\r\n          description: type,\r\n        });\r\n      }\r\n      \r\n\r\n       openNotification = () => {\r\n        notification.open({\r\n          key:this.state.key,\r\n          message: 'Notification Title',\r\n          description: 'description.',\r\n        });\r\n        setTimeout(() => {\r\n          notification.open({\r\n            key:this.state.key,\r\n            message: '修改后',\r\n            description: '大家好我是修改后的结果',\r\n          });\r\n        }, 3000);\r\n      }      \r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card style={{marginBottom:20}} title=\"左侧通知消息提示\" >\r\n                <Button onClick={() => this.openNotificationWithIcon('success')}>成功</Button>\r\n                <Button onClick={() => this.openNotificationWithIcon('info')}>详情</Button>\r\n                <Button onClick={() => this.openNotificationWithIcon('warning')}>警告</Button>\r\n                <Button onClick={() => this.openNotificationWithIcon('error')}>错误</Button>\r\n                <Button type=\"primary\" onClick={this.openNotification}>通过key修改内容</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Tabs, Radio,Card } from 'antd';\r\nconst TabPane = Tabs.TabPane;\r\nexport default class Tabss extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          mode: 'top',\r\n        };\r\n      }\r\n    \r\n      handleModeChange = (e) => {\r\n        const mode = e.target.value;\r\n        this.setState({ mode });\r\n      }\r\n    render(){\r\n        const { mode } = this.state;\r\n        return(\r\n            <div>\r\n                 <Card style={{marginBottom:20}} title=\"Tabs标签页\" >\r\n                 <Radio.Group onChange={this.handleModeChange} value={mode} style={{ marginBottom: 8 }}>\r\n                 <Radio.Button value=\"top\">水平</Radio.Button>\r\n                <Radio.Button value=\"left\">垂直</Radio.Button>\r\n        </Radio.Group>\r\n        <Tabs\r\n          defaultActiveKey=\"1\"\r\n          tabPosition={mode}\r\n          style={{ height: 220 }}\r\n        >\r\n          <TabPane tab=\"Tab 1\" key=\"1\">第 1 页</TabPane>\r\n          <TabPane tab=\"Tab 2\" key=\"2\">第 2 页</TabPane>\r\n          <TabPane tab=\"Tab 3\" key=\"3\">第 3 页</TabPane>\r\n          <TabPane tab=\"Tab 4\" key=\"4\">第 4 页</TabPane>\r\n          <TabPane tab=\"Tab 5\" key=\"5\">第 5 页</TabPane>\r\n          <TabPane tab=\"Tab 6\" key=\"6\">第 6 页</TabPane>\r\n          <TabPane tab=\"Tab 7\" key=\"7\">第 7 页</TabPane>\r\n          <TabPane tab=\"Tab 8\" key=\"8\">第 8 页</TabPane>\r\n          <TabPane tab=\"Tab 9\" key=\"9\">第 9 页</TabPane>\r\n          <TabPane tab=\"Tab 10\" key=\"10\">第 1 页0</TabPane>\r\n          <TabPane tab=\"Tab 11\" key=\"11\">第 1 页1</TabPane>\r\n        </Tabs>\r\n                </Card>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Card,Form, Icon, Input, Button, Checkbox} from 'antd'\r\nimport './index.less'\r\n\r\nclass Logins extends React.Component{\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            console.log('Received values of form: ', values);\r\n          }\r\n        })\r\n        \r\n    }\r\n    componentDidMount() {\r\n        // To disabled submit button at the beginning.\r\n        this.props.form.validateFields();\r\n      }\r\n    \r\n    render(){\r\n        const { getFieldDecorator, getFieldError, isFieldTouched, } = this.props.form;\r\n        \r\n          // Only show error after a field is touched.\r\n          const usernameError = isFieldTouched('username') && getFieldError('username');\r\n          const passwordError = isFieldTouched('password') && getFieldError('password');\r\n        return(\r\n            <div id='components-form-demo-normal-login'>\r\n                 <Card className=\"logins\" title=\"登陆行内表单\">\r\n                 <Form layout=\"inline\" onSubmit={this.handleSubmit}>\r\n        <Form.Item\r\n          validateStatus={usernameError ? 'error' : ''}\r\n          help={usernameError || ''}\r\n        >\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: '请输入用户名' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item\r\n          validateStatus={passwordError ? 'error' : ''}\r\n          help={passwordError || ''}\r\n        >\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: '请输入密码' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n          >\r\n            登录\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n                 </Card>\r\n                 <Card className=\"logins\" title=\"登陆水平表单\">\r\n                 <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n           <Form.Item>\r\n          {getFieldDecorator('usernames', {\r\n            rules: [{ required: true, message: '请输入用户名' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入用户名\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('passwords', {\r\n            rules: [{ required: true, message: '请输入密码' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"请输入密码\" />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(\r\n            <Checkbox>记住密码</Checkbox>\r\n           \r\n          )} \r\n          <a style={{float:'right',color:'blue'}}>忘记密码</a>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n             登录\r\n          </Button>\r\n            \r\n        </Form.Item>\r\n      </Form>\r\n                 </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Logins);\r\nexport default WrappedNormalLoginForm","import React from 'react'\r\nimport {\r\n    Upload,Form,Card, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete,\r\n  } from 'antd';\r\n  \r\n  const { Option } = Select;\r\n  const AutoCompleteOption = AutoComplete.Option;\r\n  \r\n  const residences = [{\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [{\r\n      value: 'hangzhou',\r\n      label: 'Hangzhou',\r\n      children: [{\r\n        value: 'xihu',\r\n        label: 'West Lake',\r\n      }],\r\n    }],\r\n  }, {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [{\r\n      value: 'nanjing',\r\n      label: 'Nanjing',\r\n      children: [{\r\n        value: 'zhonghuamen',\r\n        label: 'Zhong Hua Men',\r\n      }],\r\n    }],\r\n  }];\r\n  \r\n  class RegistrationForm extends React.Component {\r\n    state = {\r\n      confirmDirty: false,\r\n      autoCompleteResult: [],\r\n    };\r\n  \r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.form.validateFieldsAndScroll((err, values) => {\r\n        if (!err) {\r\n          console.log('Received values of form: ', values);\r\n        }\r\n      });\r\n    }\r\n  \r\n    handleConfirmBlur = (e) => {\r\n      const value = e.target.value;\r\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    }\r\n  \r\n    compareToFirstPassword = (rule, value, callback) => {\r\n      const form = this.props.form;\r\n      if (value && value !== form.getFieldValue('password')) {\r\n        callback('Two passwords that you enter is inconsistent!');\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n  \r\n    validateToNextPassword = (rule, value, callback) => {\r\n      const form = this.props.form;\r\n      if (value && this.state.confirmDirty) {\r\n        form.validateFields(['confirm'], { force: true });\r\n      }\r\n      callback();\r\n    }\r\n  \r\n    handleWebsiteChange = (value) => {\r\n      let autoCompleteResult;\r\n      if (!value) {\r\n        autoCompleteResult = [];\r\n      } else {\r\n        autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n      }\r\n      this.setState({ autoCompleteResult });\r\n    }\r\n  \r\n    render() {\r\n      const { getFieldDecorator } = this.props.form;\r\n      const { autoCompleteResult } = this.state;\r\n  \r\n      const formItemLayout = {\r\n        labelCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 8 },\r\n        },\r\n        wrapperCol: {\r\n          xs: { span: 24 },\r\n          sm: { span: 16 },\r\n        },\r\n      };\r\n      const tailFormItemLayout = {\r\n        wrapperCol: {\r\n          xs: {\r\n            span: 24,\r\n            offset: 0,\r\n          },\r\n          sm: {\r\n            span: 16,\r\n            offset: 8,\r\n          },\r\n        },\r\n      };\r\n      const prefixSelector = getFieldDecorator('prefix', {\r\n        initialValue: '86',\r\n      })(\r\n        <Select style={{ width: 70 }}>\r\n          <Option value=\"86\">+86</Option>\r\n          <Option value=\"87\">+87</Option>\r\n        </Select>\r\n      );\r\n  \r\n      const websiteOptions = autoCompleteResult.map(website => (\r\n        <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n      ));\r\n  \r\n      return (\r\n          <div>\r\n              <Card title=\"表单注册\">\r\n        <Form style={{maxWidth:'400px;',float:'left'}} {...formItemLayout} onSubmit={this.handleSubmit}>\r\n          <Form.Item\r\n            label=\"邮箱\"\r\n          >\r\n            {getFieldDecorator('email', {\r\n              rules: [{\r\n                type: 'email', message: '请输入邮箱',\r\n              }, {\r\n                required: true, message: '请输入邮箱',\r\n              }],\r\n            })(\r\n              <Input />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"密码\"\r\n          >\r\n            {getFieldDecorator('password', {\r\n              rules: [{\r\n                required: true, message: '请输入密码!',\r\n              }, {\r\n                validator: this.validateToNextPassword,\r\n              }],\r\n            })(\r\n              <Input type=\"password\" />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"确认密码\"\r\n          >\r\n            {getFieldDecorator('confirm', {\r\n              rules: [{\r\n                required: true, message: '请输入确认密码',\r\n              }, {\r\n                validator: this.compareToFirstPassword,\r\n              }],\r\n            })(\r\n              <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={(\r\n              <span>\r\n                名称&nbsp;\r\n                <Tooltip title=\"请输入昵称\">\r\n                  <Icon type=\"question-circle-o\" />\r\n                </Tooltip>\r\n              </span>\r\n            )}\r\n          >\r\n            {getFieldDecorator('nickname', {\r\n              rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n            })(\r\n              <Input />\r\n            )}\r\n          </Form.Item>\r\n          \r\n          <Form.Item\r\n            label=\"电话号码\"\r\n          >\r\n            {getFieldDecorator('phone', {\r\n              rules: [{ required: true, message: '请输入电话号码' }],\r\n            })(\r\n              <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"个人网站\"\r\n          >\r\n            {(\r\n              <AutoComplete\r\n                dataSource={websiteOptions}\r\n                onChange={this.handleWebsiteChange}\r\n                placeholder=\"website\"\r\n              >\r\n                <Input />\r\n              </AutoComplete>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item\r\n          label=\"个人照片\"\r\n          \r\n        >\r\n          <div className=\"dropbox\" style={{maxWidth:'100px'}}>\r\n            {getFieldDecorator('dragger', {\r\n              valuePropName: 'fileList',\r\n              getValueFromEvent: this.normFile,\r\n            })(\r\n              <Upload.Dragger name=\"files\" action=\"/upload.do\">\r\n                <p className=\"ant-upload-drag-icon\" >\r\n                  <Icon type=\"inbox\" />\r\n                </p>\r\n                <p className=\"ant-upload-text\"><Icon type=\"plus\" /></p>\r\n                <p className=\"ant-upload-hint\">添加图片</p>\r\n              </Upload.Dragger>\r\n            )}\r\n          </div>\r\n        </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            {getFieldDecorator('agreement', {\r\n              valuePropName: 'checked',\r\n            })(\r\n              <Checkbox>我已阅读 <a href=\"\">同意</a></Checkbox>\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">注册</Button>\r\n          </Form.Item>\r\n       \r\n        </Form>\r\n        </Card>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  const Regs = Form.create({ name: 'register' })(RegistrationForm);\r\n  \r\n export default Regs","import React from 'react'\r\nimport { Table, Divider, Tag,Card } from 'antd';\r\nimport { basic } from '../../../api/axios.js'\r\nexport default class Tables extends React.Component{\r\n  state={\r\n    data2:[],\r\n    selectedRowKeys:[],\r\n    rowdata:{},\r\n    selectedRowKeys2:[],\r\n    rowdata2:[]\r\n   \r\n  }\r\n  componentWillMount(){\r\n    basic().then(res=>{\r\n      if(res.status==200 && res.data.code==0){\r\n        res.data.result.list.map((item,index)=>{\r\n          item.key=index\r\n        })\r\n        this.setState({\r\n          data2:res.data.result.list\r\n        })\r\n      }\r\n      console.log(res)})\r\n  }\r\n  //单选\r\n  onRowClick=(record,index)=>{\r\n      this.setState({\r\n        selectedRowKeys:[index],\r\n        rowdata:record\r\n      },function(){\r\n        console.log(this.state)\r\n      })\r\n      \r\n  }\r\n  //复选\r\n  check=(rr)=>{\r\n    console.log(rr)\r\n   this.setState({\r\n    selectedRowKeys:this.state.selectedRowKeys\r\n   })\r\n  }\r\n    render(){\r\n         const rowSelection={\r\n          type:'radio',\r\n          selectedRowKeys:this.state.selectedRowKeys,\r\n         \r\n        }\r\n        const rowSelection2={\r\n          type:'checkbox',\r\n          selectedRowKeys:this.state.selectedRowKeys2,\r\n          onChange:(selectedRowKeys, selectedRows)=>{\r\n               \r\n                 this.setState({\r\n                     rowdata2:selectedRows,\r\n                     selectedRowKeys2:selectedRowKeys\r\n                },function(){\r\n                  console.log(this.state)\r\n                })\r\n          }\r\n        }\r\n        const data = [{\r\n            id: '1',\r\n            userName: '陈模块',\r\n            sex: 32,\r\n            state:'新技术',\r\n            interest:'打篮球',\r\n            address: '天津',\r\n            birthday:'1998-8-9',\r\n            time:\"19:5:6\",\r\n          },\r\n          {\r\n            id: '2',\r\n            userName: '陈模块',\r\n            sex: 32,\r\n            state:'新技术',\r\n            interest:'打篮球',\r\n            address: '天津',\r\n            birthday:'1998-8-9',\r\n            time:\"19:5:6\",\r\n          },\r\n          {\r\n            id: '3',\r\n            userName: '陈模块',\r\n            sex: 32,\r\n            state:'新技术',\r\n            interest:'打篮球',\r\n            address: '天津',\r\n            birthday:'1998-8-9',\r\n            time:\"19:5:6\",\r\n          }]\r\n          data.map((item,index)=>{\r\n            item.key=index\r\n          })\r\n          const columns = [{\r\n            title: 'id',\r\n            dataIndex: 'id'\r\n          },\r\n          {\r\n            title: '姓名',\r\n            dataIndex: 'userName'\r\n          },\r\n          {\r\n            title: '性别',\r\n            dataIndex: 'sex',\r\n            render(sex){\r\n              return  sex==1?'男':'女'\r\n            }\r\n          },\r\n          {\r\n            title: '状态',\r\n            dataIndex: 'state'\r\n          },\r\n          {\r\n            title: '爱好',\r\n            dataIndex: 'interest'\r\n          },\r\n          {\r\n            title: '生日',\r\n            dataIndex: 'birthday'\r\n          },\r\n          {\r\n            title: '地址',\r\n            dataIndex: 'address'\r\n          },\r\n          {\r\n            title: '起床时间',\r\n            dataIndex: 'time'\r\n          },]\r\n        return(\r\n            <div>\r\n                <Card style={{marginBottom:'20px'}} title=\"基础表格\">\r\n                   <Table columns={columns} pagination={false} dataSource={data}/>\r\n                </Card>\r\n                <Card style={{marginBottom:'20px'}} title=\"动态渲染表格\">\r\n                   <Table columns={columns} pagination={false} dataSource={this.state.data2}/>\r\n                </Card>\r\n                <Card style={{marginBottom:'20px'}} title=\"动态渲染表格-单选\">\r\n                   <Table columns={columns}\r\n                    pagination={false} \r\n                    rowSelection={rowSelection}\r\n                    dataSource={this.state.data2}\r\n                    onRow={(record,index) => {\r\n                      return {\r\n                        onClick: () => {\r\n                          this.onRowClick(record,index)\r\n                        },       // 点击行\r\n                       \r\n                      };\r\n                    }}\r\n                    footer={()=>(<p>介绍<h2>客户</h2>的价格是</p>)}\r\n                    />\r\n                </Card>\r\n                <Card style={{marginBottom:'20px'}} title=\"动态渲染表格-多选\">\r\n                   <Table rowSelection={rowSelection2}\r\n                     columns={columns} \r\n                     pagination={false}\r\n                     dataSource={this.state.data2}\r\n                     expandedRowRender={()=>\r\n                       ( <Table  columns={columns} dataSource={this.state.data2}/> )\r\n                     }\r\n                     />\r\n                </Card>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import request from '../until/request'\r\n\r\nexport function basic(){\r\n     return request({\r\n         url:'table/list',\r\n         method:'get'\r\n     })\r\n}\r\n\r\n","import React from 'react'\r\nimport { Form, Select,Button} from 'antd'\r\nconst FormItem = Form.Item\r\nconst Option=Select.Option\r\nexport default class FilterForm extends React.Component {\r\n    submits=(e)=>{\r\n        this.props.form.validateFields((err, values) => {\r\n            this.props.subMit(values)\r\n        });\r\n      \r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form layout=\"inline\">\r\n                <FormItem label=\"城市\" >\r\n                    {getFieldDecorator('city_id')(\r\n                        <Select style={{width:'100px'}} placeholder=\"全部\">\r\n                            <Option value=\"\">全部</Option>\r\n                            <Option value=\"1\">成都市</Option>\r\n                            <Option value=\"2\">内江市</Option>\r\n                            <Option value=\"3\">自贡市</Option>\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n                <FormItem label=\"用车模式\" >\r\n                    {getFieldDecorator('mode')(\r\n                        <Select style={{width:'120px'}} placeholder=\"全部\">\r\n                            <Option value=\"\">全部</Option>\r\n                            <Option value=\"1\">指定停车点模式</Option>\r\n                            <Option value=\"2\">禁停区模式</Option>\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n                <FormItem label=\"运营模式\" >\r\n                    {getFieldDecorator('ops_mode')(\r\n                        <Select style={{width:'100px'}} placeholder=\"全部\">\r\n                            <Option value=\"\">全部</Option>\r\n                            <Option value=\"1\">自营</Option>\r\n                            <Option value=\"2\">加盟</Option>\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n                <FormItem label=\"加盟商授权状态\" >\r\n                    {getFieldDecorator('op_mode')(\r\n                        <Select style={{width:'100px'}} placeholder=\"全部\" width='100px'>\r\n                            <Option value=\"\">全部</Option>\r\n                            <Option value=\"1\">已授权</Option>\r\n                            <Option value=\"2\">未授权</Option>\r\n                        </Select>\r\n                    )}\r\n                </FormItem>\r\n                <FormItem>\r\n                    <Button type=\"primary\" style={{margin:'0 20px'}} onClick={this.submits}>查询</Button>\r\n                    <Button onClick={()=>{\r\n                        this.props.form.resetFields();\r\n                    }}>重置</Button>\r\n                </FormItem>\r\n                \r\n            </Form>\r\n\r\n        )\r\n    }\r\n}\r\nFilterForm=Form.create({})(FilterForm);","import React from 'react'\r\nimport {Card,Button,Form,Select,message,Modal,Icon,Table,Input,Checkbox} from 'antd'\r\nimport FilterForm from './model/from'\r\nimport {city,opencity} from '../../api/city/city'\r\nimport '../../style/common.less'\r\nconst Option = Select.Option;\r\nexport default class Citys extends React.Component{\r\n    params={\r\n        page:2,\r\n        city_id: '',\r\n        mode: '',\r\n        op_mode: '',\r\n        ops_mode: '',\r\n        pageSize:10\r\n    }\r\n    state={\r\n        list:[],\r\n        openShow:false,\r\n        pagination:{\r\n            total:50,//总数\r\n            current:2,//当前页\r\n            pageSize:10,//每页条数\r\n            showTotal:(total, range)=>{\r\n                 return'共'+total+'条'\r\n            },\r\n            showSizeChanger:true,\r\n            onShowSizeChange:(current, pageSize)=>{\r\n                this.params.pageSize=pageSize\r\n                    this.datainit()\r\n            },\r\n            onChange:(page, pageSize)=>{\r\n             this.params.page=page\r\n             this.params.pageSize=pageSize\r\n                this.datainit()\r\n             },\r\n        }\r\n    }\r\n    componentWillMount(){\r\n       this.datainit();\r\n    }\r\n    //数据初始化\r\n    datainit=()=>{\r\n        city(this.params).then(res=>{\r\n            console.log(res)\r\n            if(res.data.code==0){\r\n                this.setState({\r\n                    list:res.data.result.item_list.map((item,index)=>{\r\n                        item.key=index\r\n                        return item\r\n                    }),\r\n                    pagination:{\r\n                        total:res.data.result.total_count,//总数\r\n                        current:res.data.result.page,//当前页\r\n                        pageSize:res.data.result.page_size,//每页条数\r\n                      }\r\n                })\r\n            }\r\n            \r\n        })\r\n    }\r\n    //子组件调用父子间方法\r\n    subMits=(val)=>{\r\n        for(let key in val){\r\n            this.params[key]=val[key]\r\n         }\r\n        this.datainit()\r\n    }\r\n    //开通城市\r\n    handOpenCity=()=>{\r\n        this.setState({\r\n            openShow:true\r\n        })\r\n    }\r\n    //提交\r\n    handleOk=(e)=>{\r\n         let citydata=this.cityFrom.props.form.getFieldsValue();\r\n         opencity(citydata)\r\n                .then((res)=>{\r\n                    message.success(res.data.result);\r\n                    this.setState({\r\n                        openShow:false\r\n                    })\r\n                    this.datainit()\r\n                })\r\n                .catch(res=>{\r\n                    message.error('失败');\r\n                })\r\n    }\r\n    render(){\r\n        const columns=[\r\n            {\r\n                title:'城市ID',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'城市名称',\r\n                dataIndex:'name'\r\n            },\r\n            {\r\n                title:'用车模式',\r\n                dataIndex:'mode',\r\n                render(mode){\r\n                    return mode==1?'指定停车点模式':'禁停区模式'\r\n                }\r\n            },\r\n            {\r\n                title:'运营模式',\r\n                dataIndex:'op_mode',\r\n                render(op_mode){\r\n                    return op_mode==1?'自营':'加盟'\r\n                }\r\n            },\r\n            {\r\n                title:'授权加盟商',\r\n                dataIndex:'franchisee_name'\r\n            },\r\n            {\r\n                title:'城市管理员',\r\n                dataIndex:'city_admins',\r\n                render(city_admins){\r\n                    return city_admins.map(item=>{\r\n                        return item.user_name\r\n                    }).join(',')\r\n                }\r\n            },\r\n            {\r\n                title:'城市开通时间',\r\n                dataIndex:'open_time'\r\n            },\r\n            {\r\n                title:'操作时间',\r\n                dataIndex:'update_time',\r\n                render(update_time){\r\n                    let time=new Date(update_time)\r\n                    return `${time.getFullYear()}-${(time.getMonth()+1).toString().padStart(2,'0')}-${time.getDay().toString().padStart(2,'0')} ${time.getHours().toString().padStart(2,'0')}:${time.getMinutes().toString().padStart(2,'0')}:${time.getSeconds().toString().padStart(2,'0')}`\r\n                }\r\n            },\r\n            {\r\n                title:'操作人',\r\n                dataIndex:'sys_user_name'\r\n            },\r\n        ]\r\n        const dataSource=[\r\n            {\r\n\r\n            }\r\n        ]\r\n        return(\r\n            <div>\r\n                <Card>\r\n                   <FilterForm subMit={this.subMits}></FilterForm>\r\n                </Card>\r\n                <Card style={{marginTop:'20px'}}>\r\n                    <Button type=\"primary\" onClick={this.handOpenCity}>开通城市</Button>\r\n                </Card>\r\n                <Table columns={columns} dataSource={this.state.list} pagination={this.state.pagination} className=\"conten_table\">\r\n\r\n                </Table>\r\n                <Modal\r\n                  title=\"开通城市\"\r\n                 visible={this.state.openShow}\r\n                 onOk={this.handleOk}\r\n                 onCancel={()=>{\r\n                     this.setState({\r\n                         openShow:false\r\n                     })\r\n                 }}\r\n                  >\r\n                <FilterFromOpens wrappedComponentRef={(ins=>{this.cityFrom=ins})}></FilterFromOpens>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass FilterFromOpen extends React.Component{\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        const formItemLayout={\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:10\r\n            }\r\n        }\r\n        return(\r\n              <Form onSubmit={this.handleSubmit} style={{textAlign:'center'}}>\r\n        <Form.Item label=\"城市\" {...formItemLayout}>\r\n          {getFieldDecorator('city_id', {\r\n            initialValue:'1'\r\n          })(\r\n            <Select  style={{ width: 220 }} >\r\n            \r\n                <Option value=\"1\">成都市</Option>\r\n                <Option value=\"2\">天京市</Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"运营模式\" {...formItemLayout}>\r\n        {getFieldDecorator('op_mode', {\r\n            initialValue:'1'\r\n        })(\r\n          <Select  style={{ width: 220 }} >\r\n          \r\n                <Option value=\"1\">自营</Option>\r\n                <Option value=\"2\">民营</Option>\r\n          </Select>\r\n        )}\r\n        </Form.Item>\r\n        <Form.Item label=\"用车模式\" {...formItemLayout}>\r\n        {getFieldDecorator('use_mode', {\r\n             initialValue:'1'\r\n        })(\r\n          <Select style={{ width: 220 }} >\r\n            \r\n                <Option value=\"1\">禁区</Option>\r\n                <Option value=\"2\">停车区</Option>\r\n          </Select>\r\n        )}\r\n        </Form.Item>\r\n      </Form>\r\n          \r\n        )\r\n    }\r\n}\r\nconst FilterFromOpens = Form.create({})(FilterFromOpen);","import request from '../../until/request'\r\n\r\nexport function city(data){\r\n     return request({\r\n         url:'city/open_city',\r\n         method:'get',\r\n         params:data\r\n     })\r\n}\r\n\r\nexport function opencity(data){\r\n    return request({\r\n        url:'city/open',\r\n        method:'get',\r\n        params:data\r\n    })\r\n}\r\n\r\n","import React from 'react'\r\nimport {Form,Select,DatePicker,message,Button} from 'antd'\r\nconst FormItem=Form.Item\r\nconst Option=Select.Option\r\nexport default class FilterFrom extends React.Component{\r\n    submitOrder=()=>{\r\n        this.props.form.validateFields((err, values) => {\r\n           err?message.error(err):this.props.orderfn(values)\r\n          });\r\n    }\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        return(\r\n            <div>\r\n                <Form layout='inline'>\r\n                <FormItem label=\"城市\">\r\n                {getFieldDecorator('city_id')(\r\n                <Select style={{width:100}}  placeholder=\"全部\">\r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"1\">北京市</Option>\r\n                  <Option value=\"2\">天津市</Option>\r\n                  <Option value=\"3\">成都市</Option>\r\n                </Select>\r\n                    )}\r\n                        </FormItem>\r\n                        <FormItem label=\"订单时间\">\r\n                        {getFieldDecorator('start-time')(\r\n                            <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\r\n                        )}      \r\n                       \r\n                        </FormItem>\r\n                        <FormItem>\r\n                            \r\n                        {getFieldDecorator('end-time')(\r\n                         <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\r\n                        )}\r\n                        </FormItem>\r\n                        <FormItem label=\"订单状态\">\r\n                {getFieldDecorator('op_mode')(\r\n                <Select style={{width:100}}  placeholder=\"全部\"> \r\n                  <Option value=\"\">全部</Option>\r\n                  <Option value=\"1\">进行中</Option>\r\n                  <Option value=\"2\">结束行程</Option>\r\n                  <Option value=\"3\">行程结束</Option>\r\n                </Select>\r\n                    )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button onClick={this.submitOrder}>查询</Button>\r\n                            <Button onClick={()=>{\r\n                                this.props.form.resetFields();\r\n                            }}>重置</Button>\r\n                        </FormItem>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nFilterFrom=Form.create({})(FilterFrom);","import React from 'react'\r\nimport {Card,Button,Table,Form,Select,Modal,message} from 'antd'\r\nimport FilterForm from './model/from';\r\nimport {getOrder,getOrderinfo,getfinshOrderinfo} from '../../api/order/order'\r\nconst FormItem=Form.Item\r\nexport default class Orders extends React.Component{\r\n    state={\r\n        pagination:{\r\n             current:1,\r\n             pageSize:10,\r\n             pageSizeOptions:['10', '20', '30', '40'],\r\n             total:30,\r\n             onChange:(page, pageSize)=>{\r\n                this.requestList()\r\n             },\r\n             onShowSizeChange:()=>{\r\n                   \r\n             },\r\n        },\r\n        list:[],\r\n        showvisible:false,\r\n        selectedRowKeys:'',\r\n        selectedRows:[],\r\n        infoorder:{}\r\n\r\n\r\n\r\n    }\r\n    params={\r\n        page:this.state.pagination.current,\r\n        pageSize:this.state.pagination.pageSize\r\n    }\r\n    componentDidMount(){\r\n       this.requestList()\r\n    }\r\n    //初始化数据\r\n    requestList=()=>{\r\n        getOrder(this.params).then(res=>{\r\n            if(res.status=='200' && res.data.code=='0'){\r\n                this.setState({\r\n                    list:res.data.result.item_list.map((item)=>{\r\n                        item.key=item.id\r\n                        return item\r\n                    }),\r\n                    pagination:{\r\n                        current:res.data.result.page,\r\n                        pageSize:res.data.result.page_size,\r\n                        total:res.data.result.total_count\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n    //子组件传值\r\n    headerfrom=(val)=>{\r\n        for(let key in val){\r\n            this.params[key]=val[key]\r\n        }\r\n        this.requestList()\r\n    }\r\n    //结束订单\r\n    endfinsh=()=>{\r\n        \r\n        if(!this.state.selectedRows.length){\r\n            Modal.confirm({\r\n                content:\"请选择一条订单记录\"\r\n            })\r\n            return;\r\n        }\r\n        let id=this.state.selectedRows[0].id\r\n        getOrderinfo(id).then(res=>{\r\n            console.log(res)\r\n            if(res.data.code=='0'){\r\n                this.setState({\r\n                    showvisible:true,\r\n                    infoorder:res.data.result\r\n                })\r\n            }\r\n        })\r\n    }\r\n    //结束订单提交按钮\r\n    handleOk=()=>{\r\n        getfinshOrderinfo()\r\n                       .then(res=>{\r\n                           message.success('订单结束成功')\r\n                           this.setState({\r\n                            showvisible:false\r\n                           })\r\n                           this.requestList()\r\n                       })\r\n    }\r\n    //订单详情\r\n    detail=()=>{\r\n        if(!this.state.selectedRows.length){\r\n            Modal.confirm({\r\n                content:\"请选择一条订单记录\"\r\n            })\r\n            return;\r\n        }\r\n        let id=this.state.selectedRows[0].id\r\n        window.open('/#/common/order/derails/'+id,'_blank')\r\n    }\r\n    render(){\r\n        const columns=[\r\n            {\r\n                title:'订单编号',\r\n                dataIndex:'order_sn'\r\n            },\r\n            {\r\n                title:'车辆编号',\r\n                dataIndex:'bike_sn'\r\n            },\r\n            {\r\n                title:'用户名',\r\n                dataIndex:'user_name'\r\n            },\r\n            {\r\n                title:'手机号',\r\n                dataIndex:'mobile'\r\n            },\r\n             {\r\n                title:'里程',\r\n                dataIndex:'distance'\r\n            },\r\n             {\r\n                title:'行驶时常',\r\n                dataIndex:'total_time'\r\n            },\r\n            {\r\n                title:'状态',\r\n                dataIndex:'status',\r\n                render(status){\r\n                    return status==1?'可使用':'过期'\r\n                }\r\n            },\r\n            {\r\n                title:'开始时间',\r\n                dataIndex:'start_time'\r\n            },\r\n            {\r\n                title:'结束时间',\r\n                dataIndex:'end_time'\r\n            },\r\n            {\r\n                title:'订单金额',\r\n                dataIndex:'total_fee'\r\n            },\r\n            {\r\n                title:'实付金额',\r\n                dataIndex:'user_pay'\r\n            }\r\n        ]\r\n        const rowSelection={\r\n            type:'radio',\r\n            onChange:(selectedRowKeys, selectedRows)=>{\r\n                this.setState({\r\n                    selectedRowKeys,\r\n                    selectedRows,\r\n                })\r\n            }\r\n        }\r\n        const fromitemLayout={\r\n            labelCol:{span:5},\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                <Card>\r\n                        <FilterForm orderfn={this.headerfrom}></FilterForm>\r\n                </Card>\r\n                <Card>\r\n                     <Button  type=\"primary\" onClick={this.detail}>订单详情</Button>\r\n                     <Button type=\"primary\" onClick={this.endfinsh}>结束订单</Button>\r\n                </Card>\r\n                <Table\r\n                className=\"conten_table\"\r\n                 columns={columns}\r\n                 pagination={this.state.pagination}\r\n                 dataSource={this.state.list}\r\n                 rowSelection={rowSelection}\r\n                />\r\n                 <Modal\r\n                    title=\"结束订单\"\r\n                    visible={this.state.showvisible}\r\n                    onOk={this.handleOk}\r\n                    onCancel={()=>{\r\n                        this.setState({\r\n                            showvisible:false\r\n                        })\r\n                    }}\r\n                  >\r\n                     <Form>\r\n                    <FormItem label=\"车辆编号\" {...fromitemLayout}>\r\n                    {this.state.infoorder.bike_sn}\r\n                    </FormItem>\r\n                    <FormItem label=\"剩余电量\" {...fromitemLayout}>{this.state.infoorder.battery}%</FormItem>\r\n                    <FormItem label=\"行程开始时间\"{...fromitemLayout}>{this.state.infoorder.start_time}</FormItem>\r\n                    <FormItem label=\"当前位置\" {...fromitemLayout}>{this.state.infoorder.location}</FormItem>\r\n                </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import request from '../../until/request'\r\n\r\nexport function getOrder(data){\r\n    return request({\r\n        method:'get',\r\n        params:data,\r\n        url:'order/list'\r\n    })\r\n}\r\nexport function getOrderinfo(data){\r\n    return request({\r\n        method:'get',\r\n        params:data,\r\n        url:'order/ebike_info'\r\n    })\r\n}\r\n\r\nexport function getfinshOrderinfo(data){\r\n    return request({\r\n        method:'get',\r\n        params:data,\r\n        url:'order/finish_order'\r\n    })\r\n}\r\nexport function getOrderdetail(data){\r\n   return request({\r\n       method:'get',\r\n       params:data,\r\n       url:'order/detail'\r\n   })\r\n}","import React from 'react'\r\nimport {Col,Row} from 'antd'\r\nimport Headers from './components/header'\r\n\r\nexport default class Commons extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Row className=\"simple_page\">\r\n                    <Headers menuType=\"second\"/>\r\n                </Row>\r\n                <Row>\r\n                    {this.props.children}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Card, Form } from 'antd'\r\nimport './derail.less'\r\nimport { getOrderdetail } from '../../api/order/order'\r\nconst FormItem = Form.Item\r\n\r\nexport default class Derails extends React.Component {\r\n    state = {\r\n        detail: {}\r\n    }\r\n    componentDidMount() {\r\n        let orderId = this.props.match.params.id\r\n        if (orderId) {\r\n            const obg = {\r\n                orderId\r\n            }\r\n            getOrderdetail(obg).then(res => {\r\n                console.log(res)\r\n                if (res.status == '200' && res.data.code == '0') {\r\n                    this.setState({\r\n                        detail: res.data.result\r\n                    })\r\n                    this.renderMap(res.data.result)\r\n                }\r\n            })\r\n        }\r\n       \r\n    }\r\n    //地图\r\n    renderMap = (result) => {\r\n       this.map=new window.BMap.Map('ordermap');\r\n       this.map.centerAndZoom('北京', 11);    \r\n       this.addmapcontrol()\r\n       this.drawbikerouter(result.position_list)\r\n       this.drawbikerArae(result.area)\r\n\r\n    }\r\n    //地图控件\r\n    addmapcontrol = () => {\r\n        let map=this.map\r\n        map.addControl(new window.BMap.NavigationControl({anchor:window.BMAP_ANCHOR_TOP_LEFT}));\r\n        map.addControl(new window.BMap.ScaleControl({anchor:window.BMAP_ANCHOR_TOP_LEFT}));\r\n        map.addControl(new window.BMap.OverviewMapControl());\r\n        map.addControl(new window.BMap.MapTypeControl());\r\n        map.setCurrentCity(\"北京\");\r\n    }\r\n    //绘制用户路线\r\n    drawbikerouter=(positionList)=>{\r\n         let map=this.map\r\n         let startPoint='';\r\n         let endPoint=\"\";\r\n        \r\n\r\n         if(positionList.length>0){\r\n          \r\n             let arr=positionList[0]\r\n             startPoint=new window.BMap.Point(arr.lon,arr.lat)//起点坐标\r\n           let startIcon=new window.BMap.Icon('/assets/start_point.png',new window.BMap.Size(36,42),{\r\n             imageSize:new window.BMap.Size(36,42),//图标大小\r\n            anchor:new window.BMap.Size(36,42)\r\n            })//起点的图标\r\n            let startmark=new window.BMap.Marker(startPoint,{icon:startIcon});//必须使用Marker放入起点和图标\r\n            this.map.addOverlay(startmark);//addOverlay添加到地图\r\n\r\n\r\n            //jieshu\r\n            let arrend=positionList[positionList.length-1]\r\n            endPoint=new window.BMap.Point(arrend.lon,arrend.lat)//结束点坐标\r\n            let endIcon=new window.BMap.Icon('/assets/end_point.png',new window.BMap.Size(36,42),{\r\n             imageSize:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(36,42)\r\n            })\r\n            let endmark=new window.BMap.Marker(endPoint,{icon:endIcon});\r\n            this.map.addOverlay(endmark);\r\n         }\r\n\r\n         //连接线路图\r\n         let trackPoint=[]\r\n         for(let i=0;i<positionList.length;i++){\r\n             let point=positionList[i]\r\n            trackPoint.push(new window.BMap.Point(point.lon,point.lat))//把点存入数组中\r\n         }\r\n         let polyline=new window.BMap.Polyline(trackPoint,{//设置线的颜色大小，透明度\r\n             strokeColor:\"#1869AD\",\r\n             strokeWeight:3,\r\n             strokeOpacity:1\r\n         })\r\n         this.map.addOverlay(polyline)\r\n        this.map.centerAndZoom('endPoint',11)\r\n    }\r\n    //挥之服务区\r\n    drawbikerArae=(positionList)=>{\r\n        console.log(positionList)\r\n        let trackPoint=[]\r\n         for(let i=0;i<positionList.length;i++){\r\n             let point=positionList[i]\r\n            trackPoint.push(new window.BMap.Point(point.lon,point.lat))\r\n         }\r\n         let polygon=new window.BMap.Polygon(trackPoint,{//服务区的设置\r\n             strokeColor:\"#CE0000\",\r\n             strokeWeight:4,\r\n             strokeOpacity:1,\r\n             fillColor:'#ff8605'\r\n         })\r\n         this.map.addOverlay(polygon)\r\n        this.map.centerAndZoom('endPoint',11)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id='ordermap' style={{ width: '90%', height:'400px', margin: '30px auto' }}></div>\r\n                <Card className='cards' >\r\n                    <div>基础信息</div>\r\n                    <div style={{ padding: '40px 0 20px 26px', color: '#000' }}>\r\n                        <Form>\r\n                            <FormItem label=\"用车模式\">\r\n                                {this.state.detail.mode == 1 ? '服务区' : '停车点'}\r\n                            </FormItem>\r\n                            <FormItem label=\"订单编号\" style={{ width: 390, display: 'block', clear: 'both' }}>\r\n                                {this.state.detail.order_sn}\r\n                            </FormItem>\r\n                            <FormItem label=\"车辆编号\">\r\n                                {this.state.detail.bike_sn}\r\n                            </FormItem>\r\n                            <FormItem label=\"用户姓名\">\r\n                                {this.state.detail.user_name}\r\n                            </FormItem>\r\n                            <FormItem label=\"手机号码\">\r\n                                {this.state.detail.mobile}\r\n                            </FormItem>\r\n                        </Form>\r\n                    </div>\r\n                </Card>\r\n                <Card className='cards'>\r\n                    <div>行驶轨迹</div>\r\n                    <div style={{ padding: '40px 0 20px 26px' }}>\r\n                        <Form>\r\n                            <FormItem label=\"行程起点\">\r\n                                {this.state.detail.start_location}\r\n                            </FormItem>\r\n                            <FormItem label=\"行程终点\">\r\n                                {this.state.detail.end_location}\r\n                            </FormItem>\r\n                            <FormItem label=\"行驶里程\">\r\n                                {this.state.detail.distance / 1000}公里\r\n                           </FormItem>\r\n                        </Form>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {Form,Select,Input,Radio,DatePicker} from 'antd'\r\nimport moment from 'moment'\r\nconst FormItem=Form.Item\r\nconst Option=Select.Option\r\nconst { TextArea } = Input;\r\nconst RadioGrounp=Radio.Group\r\nexport default class FilterForm extends React.Component{\r\n    render(){\r\n\r\n        const layoutwiith={\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        const userinfo=this.props.userinfo||{}\r\n        return(\r\n            <div>\r\n          \r\n                  <Form>\r\n                      <FormItem {...layoutwiith} label=\"用户名\">\r\n                      {getFieldDecorator('user_name',{\r\n                          initialValue:userinfo.username\r\n                      })(\r\n                         <Input placeholder=\"请输入用户名\"/>,\r\n                      )}\r\n                      </FormItem>   \r\n                      <FormItem {...layoutwiith} label=\"性别\">\r\n                      {getFieldDecorator('sex',{\r\n                          initialValue:userinfo.sex\r\n                      })(\r\n                         <RadioGrounp>\r\n                             <Radio value={1}>男</Radio>\r\n                             <Radio value={2}>女</Radio>\r\n                         </RadioGrounp>\r\n                      )}\r\n                      </FormItem>  \r\n                      <FormItem {...layoutwiith} label=\"状态\">\r\n                      {getFieldDecorator('state',{\r\n                          initialValue:userinfo.state\r\n                      })(\r\n                         <Select>\r\n                             <Option value={1}>相}遇繁盛</Option>\r\n                             <Option value={2}>百度</Option>\r\n                             <Option value={3}>创业者</Option>\r\n                             <Option value={4}>游泳者</Option>\r\n                             <Option value={5}>咸鱼者</Option>\r\n                         </Select>\r\n                      )}\r\n                      </FormItem>  \r\n                      <FormItem {...layoutwiith} label=\"生日\">\r\n                      {getFieldDecorator('birthday',{\r\n                          initialValue:moment(userinfo.birthday)\r\n                      })(\r\n                         <DatePicker/>\r\n                      )}\r\n                      </FormItem>  \r\n                      <FormItem {...layoutwiith} label=\"联系地址\">\r\n                      {getFieldDecorator('address',{\r\n                          initialValue:userinfo.address\r\n                      })(\r\n                         <TextArea row={3} placeholder=\"请输入联系地址\"></TextArea>\r\n                      )}\r\n                      </FormItem>           \r\n                  </Form>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\nFilterForm = Form.create({})(FilterForm);","import React from 'react'\r\nimport { LocaleProvider,Card,Modal, Form, Input, DatePicker,Button,Table,message } from 'antd'\r\nimport {getUserlist} from '../../api/user/user'\r\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nimport FilterForm from './modal/form'\r\nimport {addUser} from '../../api/user/user'\r\n\r\nmoment.locale('zh-cn');\r\nconst FormItem = Form.Item\r\n\r\nexport default class Users extends React.Component {\r\n    state={\r\n        userList:[],\r\n        pagination:{\r\n            total:50,//总数\r\n            current:2,//当前页\r\n            pageSize:10,//每页条数\r\n            showTotal:(total, range)=>{\r\n                 return'共'+total+'条'\r\n            },\r\n            showSizeChanger:true,\r\n            onShowSizeChange:(current, pageSize)=>{\r\n                this.params.pageSize=pageSize\r\n                    this.requestList()\r\n            },\r\n            onChange:(page, pageSize)=>{\r\n             this.params.page=page\r\n             this.params.pageSize=pageSize\r\n                this.requestList()\r\n             },\r\n        },\r\n        selectedRowKeys:\"\",\r\n        selectedRows:[],\r\n        title:'',\r\n        visible:false,\r\n        type:'',\r\n        footer:null\r\n\r\n\r\n\r\n    }\r\n   \r\n    params={\r\n        page:1,\r\n        pageSize:10\r\n    }\r\n    componentWillMount(){\r\n        this.requestList()\r\n    }\r\n    infoAction=(type)=>{\r\n        switch(type){\r\n            case 'add':\r\n              this.setState({\r\n                visible:true,\r\n                title:'创建员工',\r\n                type:type,\r\n                selectedRows:[],\r\n                selectedRowKeys:''\r\n              })\r\n            break;\r\n            case 'edit':\r\n           \r\n            if(this.state.selectedRows.length=='0'){\r\n                Modal.info({\r\n                    title:'提示',\r\n                    content:'请选择一个用户'\r\n                })\r\n                return;\r\n            }\r\n            this.setState({\r\n                visible:true,\r\n                title:'编辑员工',\r\n                type:type\r\n              })\r\n              console.log(this.state.selectedRows)\r\n            break;\r\n            case 'info':\r\n           \r\n            if(this.state.selectedRows.length=='0'){\r\n                Modal.info({\r\n                    title:'提示',\r\n                    content:'请选择一个用户'\r\n                })\r\n                return;\r\n            }\r\n            this.setState({\r\n                visible:true,\r\n                title:'员工详情',\r\n                type:type\r\n              })\r\n            break;\r\n            case 'delete':\r\n            if(this.state.selectedRows.length=='0'){\r\n                Modal.info({\r\n                    title:'提示',\r\n                    content:'请选择一个用户'\r\n                })\r\n                return;\r\n            }\r\n            let _that=this\r\n            let id=this.state.selectedRows[0].id\r\n            let url='user/delete/'\r\n            let obj={\r\n                id,\r\n                url,\r\n            }\r\n           let off=Modal.confirm({\r\n                title:'确认删除',\r\n                onOk(){\r\n                    addUser(obj).then(res=>{\r\n                        if(res.data.code=='0'){\r\n                            message.success('删除成功')\r\n                        }\r\n                        _that.requestList()\r\n                    })\r\n                }\r\n            })\r\n            \r\n            break;\r\n        }\r\n    }\r\n    handOk=()=>{\r\n        let type=this.state.type\r\n        let data=this.userForm.props.form.getFieldsValue();\r\n        let obj={datas:data}\r\n        switch(type){\r\n            case 'add':\r\n            obj.url=\"user/add\"\r\n            addUser(obj).then(res=>{\r\n                if(res.data.code=='0'){\r\n                    this.setState({\r\n                        visible:false\r\n                    })\r\n                    message.success('创建成功')\r\n                    this.userForm.props.form.resetFields();\r\n                    this.requestList()\r\n                }\r\n            })\r\n            break;\r\n            case 'edit':\r\n            obj.url=\"user/edit\"\r\n            addUser(obj).then(res=>{\r\n                if(res.data.code=='0'){\r\n                    this.setState({\r\n                        visible:false\r\n                    })\r\n                    message.success('编辑成功')\r\n                    this.requestList()\r\n                }\r\n            })\r\n\r\n        }\r\n       \r\n       \r\n        \r\n    }\r\n    //查询\r\n    userFind=()=>{\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                for(var key in values){\r\n                    this.params[key]=values[key]\r\n                }\r\n                this.requestList()\r\n            }\r\n          });\r\n    }\r\n    //获取员工列表\r\n    requestList=()=>{\r\n        getUserlist(this.params).then(res=>{\r\n            console.log(res)\r\n            if(res.status=='200'&&res.data.code==\"0\"){\r\n              this.setState({\r\n                  userList:res.data.result.list.map((item,index)=>{\r\n                      item.key=index\r\n                      return item\r\n                  }),\r\n                  pagination:{\r\n                    total:res.data.result.total_count,//总数\r\n                    current:res.data.result.page,//当前页\r\n                    pageSize:res.data.result.page_size,//每页条数\r\n                  }\r\n              })\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const columns=[\r\n            {\r\n                title:'id',\r\n                dataIndex:'id'\r\n            },\r\n            {\r\n                title:'用户民',\r\n                dataIndex:'username'\r\n            },\r\n            {\r\n                title:'性别',\r\n                dataIndex:'sex',\r\n                render(sex){\r\n                        return sex==1?'男':'女'\r\n                }\r\n            },\r\n            {\r\n                title:'状态',\r\n                dataIndex:'state',\r\n                render(state){\r\n                    return({\r\n                        '1':'良好',\r\n                        '2':'差',\r\n                        '3':'不合格',\r\n                        '4':'优秀',\r\n                        '5':'满分'\r\n                    }[state])\r\n                }\r\n            },\r\n            {\r\n                title:'爱好',\r\n                dataIndex:'interest',\r\n                render(interest){\r\n                    return('喜欢'+{\r\n                        '1':'打篮球',\r\n                        '2':'云毛球',\r\n                        '3':'兵兵球',\r\n                        '4':'排球',\r\n                        '5':'游戏',\r\n                        '6':'跑步',\r\n                        '7':'跳远',\r\n                        '8':'散步',\r\n                        '9':'游泳'\r\n                    }[interest])\r\n                }\r\n            },\r\n            {\r\n                title:'生日',\r\n                dataIndex:'birthday'\r\n            },\r\n            {\r\n                title:'联系地址',\r\n                dataIndex:'address'\r\n            },\r\n            {\r\n                title:'早期时间',\r\n                dataIndex:'time'\r\n            },\r\n        ]\r\n        const rowSelection={\r\n            selectedRowKeys:this.state.selectedRowKeys,\r\n            type:'radio',\r\n            onChange:(selectedRowKeys, selectedRows)=>{\r\n                    this.setState({\r\n                        selectedRows,\r\n                        selectedRowKeys\r\n                    })\r\n            }\r\n        }\r\n        let footer={}\r\n        if(this.state.type=='info'){\r\n            footer={\r\n                footer:null\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Form layout='inline'>\r\n                        <FormItem>\r\n                            {getFieldDecorator('user_name')(\r\n                                <Input placeholder=\"请输入用户名\" />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('user_mobile')(\r\n                                <Input placeholder=\"请输入手机号\" />,\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            {getFieldDecorator('date-picker')(<DatePicker placeholder=\"请选择时间\" />)}\r\n                        </FormItem>\r\n                        <FormItem>\r\n                            <Button type=\"primary\" onClick={this.userFind} htmlType=\"submit\" className=\"login-form-button\">查询</Button>\r\n                            <Button onClick={()=>{\r\n                                this.props.form.resetFields();\r\n                            }}>重置</Button>\r\n                        </FormItem>\r\n                    </Form>\r\n                </Card>\r\n                <Card>\r\n                    <Button icon=\"plus\" onClick={()=>this.infoAction('add')}>创建员工</Button>\r\n                    <Button icon=\"edit\" onClick={()=>this.infoAction('edit')}>编辑员工</Button>\r\n                    <Button onClick={()=>this.infoAction('info')}>员工详情</Button>\r\n                    <Button icon=\"delete\" onClick={()=>this.infoAction('delete')}>删除</Button>\r\n                </Card>\r\n              <LocaleProvider locale={zh_CN}><Table className='conten_table' columns={columns} dataSource={this.state.userList}\r\n                  pagination={this.state.pagination}\r\n                  rowSelection={rowSelection}\r\n                  />\r\n                  </LocaleProvider> \r\n                  <Modal\r\n                   title={this.state.title}\r\n                   visible={this.state.visible}\r\n                   onOk={this.handOk}\r\n                   onCancel={()=>{\r\n                    this.setState({\r\n                        visible:false\r\n                    }) \r\n                 }}\r\n                {...footer}\r\n                 >\r\n                   <FilterForm userinfo={this.state.selectedRows[0]} wrappedComponentRef={(ins)=>{this.userForm=ins}}></FilterForm>\r\n                </Modal>\r\n            </div>\r\n           \r\n            \r\n            )\r\n    }\r\n} \r\n\r\nUsers = Form.create({})(Users);","import React from 'react'\r\nimport {Card,Form,Select, DatePicker,Button} from 'antd'\r\nconst {RangePicker} = DatePicker;\r\nconst FormItem=Form.Item\r\nconst Option=Select.Option\r\nexport default class FilterForm  extends React.Component{\r\n    handSubmit=()=>{\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n              this.props.findBike(values)\r\n            }\r\n          });\r\n    }\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <Form layout='inline'>\r\n                        <FormItem label=\"城 市\">\r\n                        {\r\n                            getFieldDecorator('city',{\r\n                                initialValue:'0'                               \r\n                            })(\r\n                            <Select style={{width:100}}>\r\n                                <Option value='0'>全部</Option>\r\n                                <Option value='1'>北京</Option>\r\n                                <Option value='2'>上海</Option>\r\n                                <Option value='3'>城都</Option>\r\n                            </Select>\r\n                            )\r\n                        }\r\n                            \r\n                        </FormItem>\r\n                        <FormItem>\r\n                        {\r\n                             getFieldDecorator('time')(\r\n                                <RangePicker/>\r\n                             )\r\n                        }\r\n                           \r\n                        </FormItem>\r\n                        <FormItem label=\"订单状态\">\r\n                        {\r\n                            getFieldDecorator('state',{\r\n                                initialValue:'0'\r\n                            })\r\n                        \r\n                            ( <Select style={{width:120}}>\r\n                                 <Option value='0'>全部</Option>\r\n                                 <Option value='1'>进行中</Option>\r\n                                 <Option value='2'>结束行程</Option>\r\n                             </Select>)\r\n                        }\r\n                        </FormItem>\r\n                        <FormItem>\r\n                          <Button typr='priamay' onClick={this.handSubmit}>查询</Button>\r\n                          <Button>重置</Button>\r\n                        </FormItem>\r\n\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nFilterForm = Form.create({ name: 'normal_login' })(FilterForm);","import React from 'react'\r\nimport {Card,Form,Select} from 'antd'\r\nimport FilterForm from './form/form'\r\nimport {getBikeMap} from '../../api/bikemap/bikemap'\r\nconst FormItem=Form.Item\r\nconst Option=Select.Option\r\nexport default class BikeMaps extends React.Component{\r\n    state={\r\n        list:{}\r\n    }\r\n    params={\r\n\r\n    }\r\n    componentWillMount(){\r\n        this.requestList()\r\n    }\r\n    findBike=(val)=>{\r\n        this.params=val\r\n        this.requestList()\r\n   }\r\n    requestList=()=>{\r\n        getBikeMap(this.params).then(res=>{\r\n            console.log(res.data.result)\r\n            if(res.data.code=='0'){\r\n               this.setState({\r\n                   list:res.data.result\r\n               })\r\n               this.renderMap(res.data.result)\r\n            }\r\n        })\r\n    }\r\n    renderMap=(res)=>{\r\n        this.map = new window.BMap.Map(\"container\");\r\n        let list=res.route_list\r\n        let startPoint=new window.BMap.Point(list[0].split(',')[0],list[0].split(',')[1])\r\n        let endPoint=new window.BMap.Point(list[list.length-1].split(',')[0],list[list.length-1].split(',')[1])\r\n        this.map.centerAndZoom(endPoint,11)\r\n        let startIcon=new window.BMap.Icon('/assets/start_point.png',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        })\r\n        let bikeMarkerstart=new window.BMap.Marker(startPoint,{icon:startIcon})\r\n        this.map.addOverlay(bikeMarkerstart)\r\n        let endIcon=new window.BMap.Icon('/assets/end_point.png',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42),\r\n            anchor:new window.BMap.Size(18,42)\r\n        })\r\n        let bikeMarkerend=new window.BMap.Marker(endPoint,{icon:endIcon})\r\n        this.map.addOverlay(bikeMarkerend)\r\n        //绘制车辆行驶路线\r\n        let routelist=[]\r\n        list.forEach(item=>{\r\n            routelist.push(new window.BMap.Point(item.split(',')[0],item.split(',')[1]))\r\n        })\r\n        let pointLine=new window.BMap.Polyline(routelist,{\r\n            strokeColor:\"red\",\r\n            strokeWeight:2,\r\n            strokeOpacity:1\r\n        })\r\n        this.map.addOverlay(pointLine)\r\n        //绘制服务区\r\n        let severpointList=[]\r\n        let severList=res.service_list\r\n        severList.forEach(item=>{\r\n            severpointList.push(new window.BMap.Point(item.lon,item.lat))\r\n        })\r\n        let pointseverLine=new window.BMap.Polyline(severpointList,{\r\n            strokeColor:\"red\",\r\n            strokeWeight:4,\r\n            strokeOpacity:1\r\n        })\r\n        this.map.addOverlay(pointseverLine)\r\n        //绘制所有自行车图标\r\n        let bikelist=res.bike_list\r\n        let bikepointlist=[]\r\n        let bikeIcon=new window.BMap.Icon('/assets/bike.jpg',new window.BMap.Size(36,42),{\r\n            imageSize:new window.BMap.Size(36,42)\r\n        })\r\n        bikelist.forEach(item=>{\r\n            let bikepointlist=new window.BMap.Point(item.split(',')[0],item.split(',')[1])\r\n            let bikelistmarker=new window.BMap.Marker(bikepointlist,{icon:bikeIcon})\r\n            this.map.addOverlay(bikelistmarker)\r\n        })\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <FilterForm findBike={this.findBike}></FilterForm>\r\n                </Card>\r\n                <div id=\"container\" style={{height:500,marginTop:20}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import request from '../../until/request'\r\nexport function getBikeMap(data){\r\n    return request({\r\n        method:\"get\",\r\n        url:'map/bike_list',\r\n        params:data\r\n    })\r\n}","import React from 'react'\r\nimport { Card, Button,Modal } from 'antd'\r\nimport '../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport './index.less'\r\n\r\nexport default class Richs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          editorState: EditorState.createEmpty(),\r\n          visible:false,\r\n          editorContent:''\r\n        };\r\n      }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.getSysResult !== nextProps.getSysResult && nextProps.getSysResult.data) {\r\n            const contentBlock = htmlToDraft(nextProps.getSysResult.data.roomnotes);\r\n            if (contentBlock) {\r\n                const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                this.setState({ editorState })\r\n            }\r\n        }\r\n    }\r\n    onEditorStateChange=(editorState) => {\r\n        this.setState({\r\n          editorState,\r\n        });\r\n      }\r\n      getHtml=()=>{\r\n        var editorContent = draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n        this.setState({\r\n            editorContent,\r\n            visible:true\r\n        })\r\n      }\r\n    \r\n    render() {\r\n        const { editorState } = this.state;\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button onClick={()=>{this.setState({editorState: EditorState.createEmpty()})}}>清楚内容</Button>\r\n                    <Button onClick={this.getHtml}>获取富文本</Button>\r\n                </Card>\r\n                <Card>\r\n                <Editor\r\n                    editorState={editorState}\r\n                    toolbarClassName=\"toolbarClassName\"\r\n                    wrapperClassName=\"wrapperClassName\"\r\n                    editorClassName=\"editorClassName\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                />\r\n                </Card>\r\n                <Modal \r\n                   title=\"获取富文本\"\r\n                   visible={this.state.visible}\r\n                   onCancel={()=>{\r\n                       this.setState({\r\n                           visible:false\r\n                       })\r\n                   }}\r\n                >\r\n                {this.state.editorContent}\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","export function formatDate(date){\r\n    let data=new Date(date)\r\n    let n=data.getFullYear()\r\n    let y=(data.getMonth()+1).toString().padStart(2,'0')\r\n    let r=data.getDay().toString().padStart(2,'0')\r\n    let s=data.getHours().toString().padStart(2,'0')\r\n    let f=data.getMinutes().toString().padStart(2,'0')\r\n    let m=data.getSeconds().toString().padStart(2,'0')\r\n   return `${n}-${y}-${r} ${s}:${f}:${m}`\r\n}","import React from 'react'\r\nimport {Form,Select,Input} from 'antd'\r\nconst FormItem=Form.Item\r\nconst Option=Select.Option\r\n\r\nexport default class Adds extends React.Component{\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form\r\n        const fromitemLayout={\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n       \r\n        return(\r\n            <Form>\r\n                <FormItem {...fromitemLayout} label='角色名称' >\r\n                {getFieldDecorator('role_name')(\r\n                 <Input placeholder=\"请输入角色名称\"/>\r\n                )}\r\n                </FormItem>\r\n                <FormItem {...fromitemLayout} label='状态' >\r\n                {getFieldDecorator('state')(\r\n                  <Select>\r\n                        <Option value={1}>开启</Option>\r\n                        <Option value={0}>关闭</Option>\r\n                  </Select>\r\n                )}\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nAdds = Form.create({})(Adds);\r\n","import React from 'react'\r\nimport {Form,Select,Input,Tree} from 'antd'\r\nimport menuList from '../../../data/menu/menuConfig'\r\nconst { TreeNode } = Tree\r\n\r\nconst FormItem=Form.Item\r\nconst Option=Select.Option\r\nexport default class Edits extends React.Component{\r\n    //加载权限列表\r\n    renderMenuTree=(data)=>{\r\n        return data.map(item=>{\r\n            if(item.children && item.children.length>0){\r\n                return <TreeNode {...item}>\r\n                     {this.renderMenuTree(item.children)}\r\n                 </TreeNode>\r\n               }\r\n             return <TreeNode {...item}></TreeNode>\r\n         })\r\n    }\r\n    render(){\r\n        const fromitemLayout={\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        const {userInfo}=this.props\r\n        return(\r\n           <div>\r\n               <Form>\r\n                <FormItem label=\"角色名称\" {...fromitemLayout}>  \r\n                      <Input placeholder=\"Admin\" disabled/>  \r\n                </FormItem>\r\n                <FormItem label=\"状态\" {...fromitemLayout}>\r\n                {getFieldDecorator('status',{\r\n                    initialValue:1\r\n                })(\r\n                        <Select style={{width:100}}>\r\n                            <Option value={1}>启用</Option>\r\n                            <Option value={0}>禁用</Option>\r\n                        </Select>\r\n                 )}\r\n                </FormItem>\r\n                <Tree\r\n                   checkable\r\n                   checkedKeys={userInfo}\r\n                   onCheck={(checkedKeys)=>{\r\n                        this.props.patchMenuInfo(checkedKeys)\r\n                   }}\r\n                 >\r\n                     <TreeNode title=\"平台权限\" key=\"all\">\r\n                            {this.renderMenuTree(menuList)}\r\n                     </TreeNode>\r\n                 </Tree>\r\n                </Form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\nEdits=Form.create({})(Edits);","import React from 'react'\r\nimport {Form,Select,Input,Transfer, Switch } from 'antd'\r\nconst FormItem=Form.Item\r\nexport default class Authors extends React.Component{\r\n    filterOption = (inputValue, option) => {\r\n        return option.title.indexOf(inputValue)!=-1\r\n    }\r\n    handleChange = targetKeys => {\r\n        this.props.settargetKeys(targetKeys)\r\n     };\r\n    render(){\r\n        const fromitemLayout={\r\n            labelCol:{\r\n                span:5\r\n            },\r\n            wrapperCol:{\r\n                span:19\r\n            }\r\n        }\r\n      const {AuthorInfo}=this.props\r\n        return(\r\n           <div>\r\n               <Form>\r\n                    <FormItem {...fromitemLayout} label='角色名称' >\r\n                        <Input placeholder={AuthorInfo} disabled/>\r\n                    </FormItem>\r\n                    <FormItem {...fromitemLayout} label='选择用户' >\r\n                        <Transfer\r\n                          dataSource={this.props.AuthorList}\r\n                          titles={['全部', '已授权']}\r\n                          targetKeys={this.props.targetKeys}\r\n                          render={item => item.title}\r\n                          filterOption={this.filterOption}\r\n                          showSearch\r\n                          onChange={this.handleChange}\r\n                        >\r\n\r\n                        </Transfer>\r\n                    </FormItem>\r\n               </Form>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {Card,Form,Select,Button,Table,Modal,message} from 'antd'\r\nimport {formatDate} from '../../until/untils'\r\nimport {getRole,RoleCreate,RoleEdit,RoleAuthorlist,RoleAuthor} from '../../api/permission/permission'\r\nimport Adds from './modal/add'\r\nimport Edits from './modal/edit'\r\nimport Authors from './modal/author'\r\n\r\nexport default class Permissions extends React.Component{\r\n \r\n        state={\r\n            list:[],\r\n            visible1:false,\r\n            visible2:false,\r\n            visible3:false,\r\n            selectedRowKeys:'',\r\n            selectedRows:[],\r\n            pagination:{\r\n               total:50,//总数\r\n               current:2,//当前页\r\n               pageSize:10,//每页条数\r\n               showTotal:(total, range)=>{\r\n                    return'共'+total+'条'\r\n               },\r\n               showSizeChanger:true,\r\n               onShowSizeChange:(current, pageSize)=>{\r\n                   this.params.pageSize=pageSize\r\n                       this.requestList()\r\n               },\r\n               onChange:(page, pageSize)=>{\r\n                this.params.page=page\r\n                this.params.pageSize=pageSize\r\n                   this.requestList()\r\n                },\r\n           },\r\n           patchMenuInfo:[], //所选中的菜单数\r\n           AuthorList:[], //所有用户\r\n           targetKeys:[],//已授权用户\r\n           AuthorInfo:[]\r\n\r\n        }\r\n        params={\r\n           page:1,\r\n           pageSize:60\r\n        } \r\n        componentWillMount(){\r\n           this.requestList()\r\n        }\r\n  \r\n        //获取数据\r\n        requestList=()=>{\r\n         getRole(this.params).then(res=>{\r\n            if(res.data.code=='0'){\r\n               this.setState({\r\n                  list:res.data.result.item_list.map((item,index)=>{\r\n                     item.key=index\r\n                     return item\r\n                  }),\r\n                  pagination:{\r\n                     total:res.data.result.total_count,//总数\r\n                     current:res.data.result.page,//当前页\r\n                     pageSize:res.data.result.page_size,//每页条数\r\n                  }\r\n               })\r\n            }\r\n         })\r\n        }\r\n        handleOk=()=>{\r\n           let data=this.addForm.props.form.getFieldsValue();\r\n           console.log(data)\r\n           RoleCreate(data).then(res=>{\r\n              if(res.data.code=='0'){\r\n               this.setState({\r\n                  visible1:false\r\n               }) \r\n               this.requestList()\r\n               this.addForm.props.form.resetFields();\r\n               message.success('创建成功')}\r\n           })\r\n        }\r\n        //权限提交\r\n        handleOkedit=()=>{\r\n         let data=this.userEdits.props.form.getFieldsValue()\r\n         data.role_id=this.state.selectedRows[0].id\r\n         data.menu=this.state.patchMenuInfo\r\n         RoleEdit(data).then(res=>{\r\n            if(res.data.code=='0'){\r\n                message.success('设置成功')\r\n                this.setState({\r\n                  visible2:false,\r\n                  selectedRowKeys:'',\r\n                  selectedRows:[],\r\n                  patchMenuInfo:[]\r\n                })\r\n                this.requestList()\r\n            }\r\n         })\r\n        }\r\n        //用户授权提交\r\n        handleOkAuthor=()=>{\r\n           let role_id=this.state.selectedRows[0].id\r\n           let user_ids=this.state.targetKeys\r\n           let obj={role_id,user_ids}\r\n           RoleAuthor(obj).then(res=>{\r\n              if(res.data.code=='0'){\r\n                 message.success('授权成功')\r\n                 this.setState({///成功后要清空内容\r\n                     selectedRowKeys:'',\r\n                     selectedRows:[],\r\n                     AuthorList:[],\r\n                     targetKeys:[],\r\n                     visible3:false,\r\n                 })\r\n                 this.requestList()\r\n              }\r\n           })\r\n        }\r\n        //创建角色\r\n        addUser=()=>{\r\n              this.setState({\r\n                 visible1:true\r\n              })\r\n        }\r\n        //设置权限\r\n        editUser=()=>{\r\n           if(this.state.selectedRows.length<=0){\r\n              Modal.info({\r\n                 title:\"提示\",\r\n                 content:'请选择一条数据'\r\n              })\r\n              return;\r\n           }\r\n              this.setState({\r\n                 visible2:true\r\n              })\r\n        }\r\n        //用户授权\r\n        AuthorUser=()=>{\r\n        \r\n           let item=this.state.selectedRows[0]\r\n           console.log(item)\r\n           if(this.state.selectedRows.length<=0){\r\n              Modal.info({\r\n                 title:\"提示\",\r\n                 content:\"请选择一条数据\"\r\n              })\r\n              return;\r\n           }\r\n           this.setState({\r\n               visible3:true\r\n           })\r\n           this.getAuthors(item.id)\r\n        }\r\n        getAuthors=(id)=>{\r\n         RoleAuthorlist({id}).then(res=>{\r\n              if(res.data.code=='0'){\r\n                  let dtat=res.data.result\r\n                  const mockData = [];\r\n                  const targetKeys=[]\r\n                  for (let i = 0; i <dtat.length; i++) {\r\n                    mockData.push({\r\n                      key: dtat[i].user_id,\r\n                      title: dtat[i].user_name,\r\n                     });\r\n                     if(dtat[i].status){\r\n                        targetKeys.push(dtat[i].user_id);\r\n                     }\r\n                  }\r\n                  console.log(targetKeys)\r\n                  this.setState({\r\n                     AuthorList:mockData,\r\n                     targetKeys:targetKeys\r\n                  })\r\n               }\r\n           })\r\n        }\r\n        //edit组件中传过来的选中的菜单[menu]\r\n        patchMenuInfo=(val)=>{\r\n             this.setState({\r\n               patchMenuInfo:val\r\n             })\r\n        }\r\n        //author组件中已授权的值[key]\r\n        settargetKeys=(val)=>{\r\n            this.setState({\r\n               targetKeys:val\r\n            })\r\n        }\r\n   \r\n    render(){\r\n         const columns=[\r\n            {\r\n               title:'角色ID',\r\n               dataIndex:'id'\r\n            },\r\n            {\r\n                title:'角色名称',\r\n                dataIndex:'role_name'\r\n             },\r\n             {\r\n                title:'创建时间',\r\n                dataIndex:'create_time',\r\n                render(create_time){\r\n                   return formatDate(create_time)\r\n                }\r\n             },\r\n             {\r\n                title:'使用状态',\r\n                dataIndex:'status'\r\n             },\r\n             {\r\n                title:'授权时间',\r\n                dataIndex:'authorize_time',\r\n                render(authorize_time){\r\n                   return formatDate(authorize_time)\r\n                }\r\n             },\r\n             {\r\n                title:'授权人',\r\n                dataIndex:'authorize_user_name'\r\n             }\r\n\r\n        ]\r\n        const rowSelection={\r\n         type:'radio',//单选\r\n         selectedRowKeys:this.state.selectedRowKeys,\r\n         onChange:(selectedRowKeys, selectedRows)=>{\r\n             this.setState({\r\n               selectedRowKeys,\r\n               selectedRows,\r\n               patchMenuInfo:selectedRows[0].menus,\r\n               AuthorInfo:selectedRows[0].role_name \r\n             })\r\n         }\r\n     }\r\n        return(\r\n            <div>\r\n                <Card>\r\n                    <Button type=\"primary\" onClick={this.addUser}>创建角色</Button>\r\n                    <Button type=\"dashed\" onClick={this.editUser}>设置权限</Button>\r\n                    <Button onClick={this.AuthorUser}>用户授权</Button>\r\n                </Card>\r\n                <Table columns={columns} dataSource={this.state.list} rowSelection={rowSelection}  pagination={this.state.pagination} className=\"conten_table\"\r\n                \r\n                >\r\n\r\n                </Table>\r\n               <Modal title=\"创建角色\"\r\n                  visible={this.state.visible1}\r\n                  onOk={this.handleOk}\r\n                  onCancel={()=>{\r\n                     this.setState({\r\n                        visible1:false\r\n                     })\r\n                  }}\r\n               >\r\n                  <Adds wrappedComponentRef={(ins)=>{this.addForm=ins}}></Adds>\r\n               </Modal>\r\n               <Modal title=\"权限设置\"\r\n                  visible={this.state.visible2}\r\n                  onOk={this.handleOkedit}\r\n                  onCancel={()=>{\r\n                     this.setState({\r\n                        visible2:false\r\n                     })\r\n                  }}\r\n                  width={600}\r\n               >\r\n                  <Edits patchMenuInfo={this.patchMenuInfo} userInfo={this.state.patchMenuInfo} wrappedComponentRef={(ins)=>{this.userEdits=ins}}></Edits>\r\n               </Modal>\r\n               <Modal title=\"用户授权\"\r\n                  visible={this.state.visible3}\r\n                  onOk={this.handleOkAuthor}\r\n                  onCancel={()=>{\r\n                     this.setState({ \r\n                        visible3:false\r\n                     })\r\n                  }}\r\n                  width={700}\r\n               >\r\n                  <Authors settargetKeys={this.settargetKeys} targetKeys={this.state.targetKeys} AuthorInfo={this.state.AuthorInfo}  AuthorList={this.state.AuthorList} wrappedComponentRef={(ins)=>{this.userAuthors=ins}}></Authors>\r\n               </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import request from '../../until/request'\r\nexport function getRole(data){\r\n    return request({\r\n        method:'get',\r\n        params:data,\r\n        url:'role/list'\r\n    })\r\n}\r\nexport function RoleCreate(data){\r\n     return request({\r\n         method:\"get\",\r\n         url:'role/create',\r\n         params:data\r\n     })\r\n}\r\nexport function RoleEdit(data){\r\n    return request({\r\n        method:'get',\r\n        params:data,\r\n        url:'permission/edit'\r\n    })\r\n}\r\nexport function RoleAuthorlist(data){\r\n     return request({\r\n         method:\"get\",\r\n         params:data,\r\n         url:'role/user_list'\r\n     })\r\n}\r\nexport function RoleAuthor(data){\r\n    return request({\r\n        method:'get',\r\n        url:'role/user_role_edit',\r\n        params:data\r\n    })\r\n}","import React, { Component } from 'react';\r\n\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts';\r\n// 引入柱状图\r\nimport  'echarts/lib/chart/bar';\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\n\r\nclass EchartsTest extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            idount:'echart'+Math.random().toString().substring(2,9),\r\n        }\r\n    }\r\n    echartsVal={\r\n        myChart:null\r\n    }\r\n    componentDidMount() {\r\n        this.ininBar()\r\n        window.addEventListener('resize',()=>{\r\n            // console.log(this.echartsVal.myChart)\r\n            this.echartsVal.myChart.resize()\r\n        })\r\n    }\r\n    ininBar=()=>{\r\n           // 基于准备好的dom，初始化echarts实例\r\n          this.echartsVal.myChart=echarts.init(document.getElementById(this.state.idount))\r\n          // 绘制图表\r\n          this.echartsVal.myChart.showLoading({\r\n              backgroundColor:'#000'\r\n          })\r\n          if( this.echartsVal.myChart!=null){\r\n              this.echartsVal.myChart.clear()\r\n              this.echartsVal.myChart.setOption(this.props.getOption);\r\n              setTimeout(()=>{\r\n                this.echartsVal.myChart.hideLoading()\r\n\r\n              },1000)\r\n\r\n          }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id={this.state.idount} style={{  height: 400 }}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EchartsTest;\r\n","import React from 'react';\r\nimport { Card } from 'antd';\r\n// import echartTheme from './../themeLight'\r\n//不是按需加载的话文件太大\r\n//import echarts from 'echarts'\r\n//下面是按需加载\r\nimport echarts from 'echarts/lib/echarts'\r\n//导入折线图\r\n// import 'echarts/lib/chart/line';  //折线图是line,饼图改为pie,柱形图改为bar\r\n// import 'echarts/lib/component/tooltip';\r\n// import 'echarts/lib/component/title';\r\n// import 'echarts/lib/component/legend';\r\n// import 'echarts/lib/component/markPoint';\r\nimport EchartsTest from '../../components/echarts/bar'\r\nexport default class Line extends React.Component {\r\n  componentWillMount() {\r\n    //主题的设置要在willmounted中设置\r\n    echarts.registerTheme('Imooc', 'red');\r\n  }\r\n  getOption = () => {\r\n    let option = {\r\n      title: { text: 'ECharts 入门示例' },\r\n      tooltip: {},\r\n      xAxis: {\r\n        data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: [5, 20, 36, 10, 10, 20]\r\n      }]\r\n    }\r\n    return option\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title=\"折线图表之一\">\r\n          <EchartsTest getOption={this.getOption()} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class LawyerHome extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>律师行业管理平台</div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Card, Form, Input, Button, Row, Col, Table } from 'antd'\r\nimport './index.less'\r\nconst FormItem = Form.Item\r\nexport default class LawyerTeam extends React.Component {\r\n    constructor(props){\r\n        super()\r\n        this.state={\r\n            data: [\r\n                {\r\n                    name:'12',\r\n                    type:'3',\r\n                    number:'2',\r\n                },\r\n                {\r\n                    name:'1',\r\n                    type:'3',\r\n                    number:'3',\r\n                },\r\n                {\r\n                    name:'3',\r\n                    type:'4',\r\n                    number:'6',\r\n                },\r\n            ]\r\n        }\r\n    }\r\n    //删除操作\r\n    delete=(val)=>{\r\n          this.state.data.splice(val,1)\r\n          this.setState({\r\n              data:this.state.data\r\n          })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        const columns = [\r\n            {\r\n                title: '成员',\r\n                dataIndex: 'name',\r\n                key: '1',\r\n                width: 150,\r\n            },\r\n            {\r\n                title: '人员类别',\r\n                dataIndex: 'type',\r\n                key: '2',\r\n                width: 150,\r\n            },\r\n            { title: '联系电话', dataIndex: 'number', key: '8' },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                width: 100,\r\n                render: (text, record, index) => <a onClick={()=>this.delete(index)}>删除</a>,\r\n            },\r\n        ]\r\n        \r\n        return (\r\n            <div>\r\n                <Card title='团队信息'>\r\n                    <Form layout='vertical'>\r\n                        <Row>\r\n                            <Col span={8}>\r\n                                <FormItem label=\"律所名称\" wrapperCol={{ span: 6 }}>\r\n                                    {getFieldDecorator('name', {\r\n                                        rules: [{ required: true, message: '不能为空' }]\r\n                                    })(<Input style={{ width: 300 }} placeholder=\"请输入律所名称\" />)}\r\n                                </FormItem>\r\n                            </Col>\r\n                            <Col span={2} style={{ position: 'relative', height: 92 }}>\r\n                                <FormItem style={{ position: 'absolute', bottom: 0, }}>\r\n                                    <Button>保存</Button>\r\n                                </FormItem>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Card>\r\n                <Card title='团队成员' style={{ position: 'relative',paddingBottom:30 }} extra={<Button icon=\"plus\">新增</Button>}>\r\n                    <Table columns={columns} dataSource={this.state.data} pagination={false}/>\r\n                    <Button className=\"btns\">保存</Button>\r\n                </Card>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nLawyerTeam = Form.create({ name: 'dynamic_rule' })(LawyerTeam);","import {GET_CASE} from '@/redux/action/type'\r\nimport {getCase} from '@/api/case/caseapi'\r\n\r\nexport const getCaseList=(data)=>(dispatch)=>{\r\n    getCase().then(res=>{\r\n        if(res.data.code==='0'){\r\n            dispatch({\r\n                type:GET_CASE,\r\n                playload:res.data.result\r\n            })\r\n        }\r\n    })\r\n    .catch(err=>console.log(err))\r\n}","/**\r\n * Alert组件\r\n * 调用应用\r\n * choose传值，clear父组件方法\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {Alert} from 'antd'\r\nimport './index.less'\r\n\r\nclass AlertCom extends Component {\r\n    render() {\r\n        const link=<a onClick={this.props.clear}>清空</a>\r\n        return (\r\n            <Alert message={'你已选择'+this.props.choose+'项'} description={this.props.choose?link:''} type=\"info\" showIcon />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlertCom;\r\n","import React, { Component } from 'react';\r\nimport { Table, Badge, Menu, Dropdown, Icon } from 'antd';\r\n\r\nclass tablelist extends Component {\r\n    render() {\r\n        const columns = [\r\n            { title: 'Name', dataIndex: 'name', key: 'name' },\r\n            { title: 'Platform', dataIndex: 'platform', key: 'platform' },\r\n            { title: 'Version', dataIndex: 'version', key: 'version' },\r\n            { title: 'Upgraded', dataIndex: 'upgradeNum', key: 'upgradeNum' },\r\n            { title: 'Creator', dataIndex: 'creator', key: 'creator' },\r\n            { title: 'Date', dataIndex: 'createdAt', key: 'createdAt' },\r\n            { title: 'Action', key: 'operation', render: () => <a href=\"javascript:;\">Publish</a> },\r\n        ];\r\n\r\n        const data = [];\r\n        for (let i = 0; i < 3; ++i) {\r\n            data.push({\r\n                key: i,\r\n                name: 'Screem',\r\n                platform: 'iOS',\r\n                version: '10.3.4.5654',\r\n                upgradeNum: 500,\r\n                creator: 'Jack',\r\n                createdAt: '2014-12-24 23:12:00',\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                <Table\r\n                    className=\"components-table-demo-nested\"\r\n                    columns={columns}\r\n                    expandedRowRender={expandedRowRender}\r\n                    dataSource={data}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst menu = (\r\n    <Menu>\r\n        <Menu.Item>Action 1</Menu.Item>\r\n        <Menu.Item>Action 2</Menu.Item>\r\n    </Menu>\r\n);\r\n\r\nconst expandedRowRender = () => {\r\n        const columns = [\r\n            { title: 'Date', dataIndex: 'date', key: 'date' },\r\n            { title: 'Name', dataIndex: 'name', key: 'name' },\r\n            {\r\n                title: 'Status',\r\n                key: 'state',\r\n                render: () => (\r\n                    <span>\r\n                        <Badge status=\"success\" />\r\n                        Finished\r\n          </span>\r\n                ),\r\n            },\r\n            { title: 'Upgrade Status', dataIndex: 'upgradeNum', key: 'upgradeNum' },\r\n            {\r\n                title: 'Action',\r\n                dataIndex: 'operation',\r\n                key: 'operation',\r\n                render: () => (\r\n                    <span className=\"table-operation\">\r\n                        <a href=\"javascript:;\">Pause</a>\r\n                        <a href=\"javascript:;\">Stop</a>\r\n                        <Dropdown overlay={menu}>\r\n                            <a href=\"javascript:;\">\r\n                                More <Icon type=\"down\" />\r\n                            </a>\r\n                        </Dropdown>\r\n                    </span>\r\n                ),\r\n            },\r\n        ];\r\n\r\n        const data = [];\r\n        for (let i = 0; i < 3; ++i) {\r\n            data.push({\r\n                key: i,\r\n                date: '2014-12-24 23:12:00',\r\n                name: 'This is production name',\r\n                upgradeNum: 'Upgraded: 56',\r\n            });\r\n        }\r\n        return <Table rowSelection={{type:'checkbox',selectedRowKeys:[]}}  columns={columns} dataSource={data} pagination={false} />;\r\n    }\r\n\r\n\r\nexport default tablelist;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Card,Radio} from 'antd';\r\nimport TableList from '../../component/case/tablelist'\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nclass ModalLeft extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n    //关闭抽屉框\r\n    close = () => {\r\n        this.props.visibleclose()\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    title=\"新增案件\"\r\n                    width={1000}\r\n                    onClose={this.close}\r\n                    visible={this.props.visible}\r\n                >\r\n\r\n                    <Form layout=\"vertical\" hideRequiredMark>\r\n                        <Card title='客户信息'>\r\n                            <Row gutter={16}>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"客户姓名\">\r\n                                        {getFieldDecorator('name', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入姓名\" />)}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"联系电话\">\r\n                                        {getFieldDecorator('number', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入电话号码\" />)}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <Form.Item label=\"身份证\">\r\n                                        {getFieldDecorator('usernumber', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入身份证\" />)}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                        <Card title=\"案件信息\">\r\n                            <Row justify=\"space-between\" type=\"flex\" gutter={16}>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"案件编号\">\r\n                                        {getFieldDecorator('caseNumber', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入案件编号\" />)}\r\n\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"案件名称\">\r\n                                        {getFieldDecorator('caseName', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入案件名称\" />)}\r\n\r\n                                    </Form.Item>\r\n                              \r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"总费用\">\r\n                                        {getFieldDecorator('allfee', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入总费用\" />)}\r\n\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"案件状态\">\r\n                                        {getFieldDecorator('status', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Radio.Group>\r\n                                            <Radio value=\"1\">合同书</Radio>\r\n                                            <Radio value=\"2\">委托书</Radio>\r\n                                        </Radio.Group>)}\r\n                                           \r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row justify=\"space-between\" type=\"flex\" gutter={16}>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"起诉人\">\r\n                                        {getFieldDecorator('prosecutor', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入起诉人\" />)}\r\n\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"被起诉人\">\r\n                                        {getFieldDecorator('byprosecutor', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入被起诉人\" />)}\r\n\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"主办律师\">\r\n                                        {getFieldDecorator('lawyer', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入主办律师\" />)}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"开庭时间\">\r\n                                       {getFieldDecorator('courtDay', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入开庭时间\" />)}\r\n                                           \r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row justify=\"space-between\" type=\"flex\" gutter={16}>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"收案时间\">\r\n                                        {getFieldDecorator('closeTime', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入收案时间\" />)}\r\n\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"据票\">\r\n                                        {getFieldDecorator('ticket', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入据票\" />)}\r\n\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"委托方式\">\r\n                                        {getFieldDecorator('delegateType', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入委托方式\" />)}\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"起诉类型\">\r\n                                       {getFieldDecorator('sueType', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入起诉类型\" />)}\r\n                                           \r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row justify=\"space-between\" type=\"flex\" gutter={16}>\r\n                                <Col span={5}>\r\n                                    <Form.Item label=\"案件类型\">\r\n                                        {getFieldDecorator('caseType', {\r\n                                            rules: [{ required: true, message: '必填' }],\r\n                                        })(<Input placeholder=\"请输入案件类型\" />)}\r\n\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                   \r\n                                </Col>\r\n                                <Col span={5}>\r\n                                   \r\n                                </Col>\r\n                                <Col span={5}>\r\n                                   \r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Form.Item label=\"案件描述\">\r\n                              {getFieldDecorator('caseDesc')(\r\n                                   <TextArea rows={4} placeholder=\"案件描述原因\"/>\r\n                              )}\r\n                              </Form.Item>\r\n                            </Row>\r\n                        </Card>\r\n                    </Form>\r\n                    <Card title=\"律师团队\">\r\n                        <TableList></TableList>\r\n                    </Card>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            bottom: 0,\r\n                            width: '100%',\r\n                            borderTop: '1px solid #e9e9e9',\r\n                            padding: '10px 16px',\r\n                            background: '#fff',\r\n                            textAlign: 'right',\r\n                        }}\r\n                    >\r\n                        <Button onClick={this.close} style={{ marginRight: 8 }}>\r\n                            取消\r\n            </Button>\r\n                        <Button onClick={this.onClose} type=\"primary\">\r\n                            提交\r\n            </Button>\r\n                    </div>\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nModalLeft = Form.create()(ModalLeft);\r\nexport default ModalLeft;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Modal, Card, Button, Row, Col, Form, Input, Radio, Switch, Upload, Icon } from 'antd'\r\nconst FormItem = Form.Item;\r\nconst { TextArea } = Input;\r\nclass DrawModal extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal\r\n                    visible={this.props.visible}\r\n                    title=\"跟踪\"\r\n                    width={1000}\r\n                    onOk={this.handleOk}\r\n                    onCancel={() => { this.props.handleCancel() }}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={() => { this.props.handleCancel() }}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.props.loading} onClick={this.handleOk}>\r\n                            提交\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                    <Card title=\"案件信息\">\r\n                        <Row gutter={14}>\r\n                            <Col span={8}>\r\n                                <strong>客户姓名:</strong><span>撑开</span>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <strong>联系电话:</strong><span>13981722057</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={14}>\r\n                            <Col span={8}>\r\n                                <strong>案件名称:</strong><span>婚姻是</span>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <strong>案件类别:</strong><span>调差</span>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <strong>类型:</strong><span>撒旦</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter={14}>\r\n                            <Col span={24}>\r\n                                <strong>案件描述:</strong><span>给用户就开始撒娇国际快递噶数据给大家就啥都吉萨根据德国撒娇的感觉撒给大家撒给大家仨过的结果撒娇撒娇给大家仨过的计划嘎斯撒大苏打萨达萨达是</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                    <Card title=\"合同审批\">\r\n                        <DrawTop />\r\n                    </Card>\r\n                    <Card title=\"结案信息\">\r\n                        <DrawCenter />\r\n                    </Card>\r\n                    <Card title=\"案件结果\">\r\n                        <DrawBottom />\r\n                    </Card>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrawModal;\r\n\r\n\r\n\r\n\r\n//合同审批\r\nclass DrawTop extends Component {\r\n    submits=()=>{\r\n      console.log(this.props.form.getFieldsValue())\r\n    }\r\n    render() {\r\n        const layoutItem = {\r\n            labelCol: {\r\n                span: 4\r\n            },\r\n            wrapperCol: {\r\n                span: 16\r\n            }\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Form layout=\"vertical\">\r\n                    <Row>\r\n                        <FormItem {...layoutItem} label='原因'>\r\n                            {\r\n                                getFieldDecorator('textare')(\r\n                                    <TextArea rows={4} />\r\n                                )\r\n                            }\r\n                        </FormItem>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"end\">\r\n                        <Col push={8} span={20}>\r\n                            <FormItem>\r\n                                {getFieldDecorator('radio-group')(\r\n                                    <Radio.Group>\r\n                                        <Radio value=\"a\">item 1</Radio>\r\n                                        <Radio value=\"b\">item 2</Radio>\r\n                                        <Radio value=\"c\">item 3</Radio>\r\n                                    </Radio.Group>\r\n                                )}\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col push={1} span={4}>\r\n                            <FormItem>\r\n                                <Button onClick={this.submits}>提交</Button>\r\n                            </FormItem>\r\n                        </Col>\r\n\r\n\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nDrawTop = Form.create({ name: 'yuanyin' })(DrawTop);\r\n\r\n\r\n//结案信息\r\nclass DrawCenter extends Component {\r\n    render() {\r\n        const layoutItem = {\r\n            labelCol: {\r\n                span: 8\r\n            },\r\n            wrapperCol: {\r\n                span: 16\r\n            }\r\n        }\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Form layout=\"inline\">\r\n                    <Row>\r\n                        <FormItem label='是否付清'>\r\n                            {getFieldDecorator('isout', { valuePropName: 'checked' })(<Switch />)}\r\n                        </FormItem>\r\n                        <FormItem {...layoutItem} label=\"已付\">\r\n                            {getFieldDecorator('out')(\r\n                                <Input placeholder=\"已付\" />\r\n                            )}\r\n                        </FormItem>\r\n                        <FormItem {...layoutItem} label=\"未付\">\r\n                            {getFieldDecorator('in')(\r\n                                <Input placeholder=\"未付\" />\r\n                            )}\r\n                        </FormItem>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"end\">\r\n                        <FormItem>\r\n                            <Button>结案</Button>\r\n                        </FormItem>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nDrawCenter = Form.create({ name: 'yuanyins' })(DrawCenter);\r\n\r\n//案件结果\r\nclass DrawBottom extends Component {\r\n    render() {\r\n        // const layoutItem = {\r\n        //     labelCol: {\r\n        //         span: 4\r\n        //     },\r\n        //     wrapperCol: {\r\n        //         span: 20\r\n        //     }\r\n        // }\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Form layout=\"inline\">\r\n                    <Row>\r\n                        <FormItem label='是否调解'>\r\n                            {getFieldDecorator('isout', { valuePropName: 'checked' })(<Switch />)}\r\n                        </FormItem>\r\n                        <FormItem label=\"调节通知单\">\r\n                            <Upload action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\" directory>\r\n                                <Button>\r\n                                    <Icon type=\"upload\" /> 上传文件\r\n                            </Button>\r\n                            </Upload>\r\n                        </FormItem>\r\n                    </Row>\r\n                    <Row type=\"flex\" justify=\"end\">\r\n                        <FormItem>\r\n                            <Button>保存</Button>\r\n                        </FormItem>\r\n                    </Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nDrawBottom = Form.create({ name: 'yuanyinss' })(DrawBottom);","import React from 'react';\r\nimport { LocaleProvider, Card, Form, Button, Input, Table } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { getCaseList } from '@/redux/action/case/case'\r\nimport Alerts from '../../../components/alert/index'\r\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\r\nimport ModalLeft from '../component/case/modal'\r\nimport DrawNodal from '../component/case/draw'\r\nimport './index.less'\r\nconst FormItem = Form.Item\r\nclass LawyerCase extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            choose: 1,\r\n            pagination: {  //分页参数\r\n                current: 1,\r\n                pageSize: 5,\r\n                pageSizeOptions: ['5', '10', '15', '20'],\r\n                showQuickJumper: true,\r\n                showSizeChanger: true,\r\n                showTotal: (total, range) => {\r\n                    return '共' + total + '页'\r\n                },\r\n                total: 30\r\n            },\r\n            visible: false,//新增开关draw\r\n            visibles: false, //跟踪开关\r\n            loading: false,\r\n            casedata: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.requestList()\r\n    }\r\n    componentWillReceiveProps(nextProps, oldProps) {\r\n        console.log(nextProps.caseList)\r\n        let newval = nextProps.caseList !== undefined ? nextProps.caseList.toString() : ''\r\n        let oldval = oldProps.caseList !== undefined ? oldProps.caseList.toString() : ''\r\n        if (newval !== oldval && newval !== '') {\r\n            this.setState({\r\n                casedata: nextProps.caseList.item_list.map(item => {\r\n                    item.key = item.id\r\n                    return item\r\n                }),\r\n                pagination: {\r\n                    current: nextProps.caseList.page,\r\n                    pageSize: nextProps.caseList.page_size,\r\n                    total: nextProps.caseList.total_count\r\n                }\r\n\r\n            })\r\n        }\r\n    }\r\n    //清空事件\r\n    clear = () => {\r\n        this.setState({\r\n            choose: 0\r\n        })\r\n    }\r\n    //分页\r\n    changePagination = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            pagination: pagination\r\n        })\r\n\r\n    }\r\n    //数据请求\r\n    requestList = () => {\r\n        this.props.getCaseList()\r\n    }\r\n    render() {\r\n        const columns = [\r\n            {\r\n                title: \"序号\",\r\n                dataIndex: \"\",\r\n                key: \"rowIndex\",\r\n                align: \"center\",\r\n                render:(t, r, index)=> {\r\n                    return parseInt(index) + 1;\r\n                }\r\n            },\r\n            {\r\n                title: \"案件编号\",\r\n                align: \"center\",\r\n                dataIndex: \"caseNumber\"\r\n            },\r\n            {\r\n                title: \"案件名称\",\r\n                align: \"center\",\r\n                dataIndex: \"caseName\"\r\n            },\r\n            {\r\n                title: \"总费用\",\r\n                align: \"center\",\r\n                dataIndex: \"allfee\"\r\n            },\r\n            {\r\n                title: \"主办律师\",\r\n                align: \"center\",\r\n                dataIndex: \"lawyer\"\r\n            },\r\n            {\r\n                title: \"收案时间\",\r\n                align: \"center\",\r\n                dataIndex: \"closeTime\"\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: 'operation',\r\n                width: 100,\r\n                render: () => (<span><a href=\"javascript:;\" onClick={() => { this.setState({ visibles: true }) }} style={{ color: 'green' }}>跟踪</a>&nbsp;&nbsp;<a href=\"javascript:;\">详情</a></span>),\r\n            },\r\n        ];\r\n        const data = [\r\n            {\r\n                caseNumber: '陈凯',\r\n                closeTime: '2019-0-9',\r\n                allfee: 223,\r\n                lawyer: \"三空间看\",\r\n                caseName: '城市里'\r\n            },\r\n            {\r\n                name: '陈凯',\r\n                closeTime: '2019-0-9',\r\n                allfee: 2232,\r\n                lawyer: \"三空间看\",\r\n                layer: '城市里'\r\n            }\r\n        ]\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <FormValues />\r\n                    <div className=\"centerBtn\">\r\n                        <Button type='dashed' onClick={() => { this.setState({ visible: true }) }} icon='plus'>新增</Button>\r\n                        <Button type='default'>批量操作</Button>\r\n                        <Button type='default'>...</Button>\r\n                    </div>\r\n                    <Alerts choose={this.state.choose} clear={this.clear} />\r\n                    {/* 新增模态框 */}\r\n                    <ModalLeft visible={this.state.visible} visibleclose={() => { this.setState({ visible: false }) }} />\r\n                    {/* 跟踪模态框 */}\r\n                    <DrawNodal visible={this.state.visibles} loading={this.state.loading} handleCancel={() => { this.setState({ visibles: false }) }} />\r\n                    <LocaleProvider locale={zh_CN}><Table onChange={this.changePagination} columns={columns} dataSource={this.state.casedata} pagination={this.state.pagination} /></LocaleProvider>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapPropsToState = (state) => {\r\n    return {\r\n        caseList: state.caseter.case\r\n    }\r\n}\r\nexport default connect(mapPropsToState, { getCaseList })(LawyerCase);\r\n\r\n\r\nclass FormValue extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            show: true\r\n        }\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form layout='inline'>\r\n                <FormItem label=\"被告人\">\r\n                    {getFieldDecorator('username', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '必填！',\r\n                            },\r\n                        ],\r\n                    })(<Input placeholder=\"请输入\" />)}\r\n                </FormItem>\r\n                <FormItem label=\"联系电话\">\r\n                    {getFieldDecorator('number', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '必填！',\r\n                            },\r\n                        ],\r\n                    })(<Input placeholder=\"请输入电话号码\" />)}\r\n                </FormItem>\r\n                {\r\n                    this.state.show ? (<FormItem label=\"身份证号码\">\r\n                        {getFieldDecorator('usernumber', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '必填！',\r\n                                },\r\n                            ],\r\n                        })(<Input placeholder=\"请输入身份证号码\" />)}\r\n                    </FormItem>) : null\r\n                }\r\n                <FormItem>\r\n                    <Button type=\"primary\" onClick={this.check}> 查询</Button>\r\n                    <Button type=\"primary\" onClick={this.check}> 重置</Button>\r\n                    {\r\n                        this.state.show ? (<a onClick={() => this.setState({ show: false })}>收起</a>) : (<a onClick={() => this.setState({ show: true })}>展开</a>)\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst FormValues = Form.create({})(FormValue);\r\n","import request from '@/until/request'\r\n\r\nexport function getCase(data){\r\n   return request({\r\n       url:'/lawyer/caselist',\r\n       method:'get',\r\n       params:data\r\n   })\r\n}","import { GET_CUSTERLIST } from '../type'\r\nimport { getCuster } from '@/api/custer/custer'\r\nexport const getcusterlist = (data) => (dispatch) => {\r\n    getCuster(data).then(res => {\r\n        if (res.status === 200 && res.data.code === '0') {\r\n            dispatch({\r\n                type: GET_CUSTERLIST,\r\n                playload: res.data.result\r\n            })\r\n        }\r\n    })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}","import React from 'react'\r\nimport {message, Form, Input,Radio,Modal,Button } from 'antd'\r\nimport {editCuster,addCuster} from '@/api/custer/custer'\r\n\r\nclass FormCuster extends React.Component {\r\n    params={\r\n        title:''\r\n    }\r\n    componentDidMount(){\r\n        this.props.onRef(this)\r\n    }\r\n    myName=(record)=>{\r\n        this.props.form.resetFields()\r\n        this.props.form.setFieldsValue({\r\n            ...record\r\n        })\r\n    }\r\n    //确认按钮\r\n    handleOk=()=>{\r\n         let datas=this.props.form.getFieldsValue()\r\n         this.params.title===\"编辑\"?editCuster(datas).then(res=>{\r\n           if(res.data.code===0){\r\n            // this.props.handleCancel()\r\n            message.success('编辑成功')\r\n            this.props.handleEditOk()\r\n           }\r\n         }):addCuster(datas).then(res=>{\r\n            if(res.data.code===0){\r\n                // this.props.handleCancel()\r\n                message.success('新增成功')\r\n                this.props.handleEditOk()\r\n               }\r\n         })\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const layoutBable={\r\n            labelCol:{\r\n                span:8\r\n            },\r\n            wrapperCol:{\r\n                span:15\r\n            }\r\n        }\r\n        return (\r\n                 <Modal\r\n                    visible={this.props.visible}\r\n                    title={this.params.title}\r\n                    width={500}\r\n                    onOk={this.handleOk}\r\n                    onCancel={() => { this.props.handleCancel() }}\r\n                    footer={[\r\n                        <Button key=\"back\" onClick={() => { this.props.handleCancel() }}>\r\n                            取消\r\n                        </Button>,\r\n                        <Button key=\"submit\" type=\"primary\" loading={this.props.loading} onClick={this.handleOk}>\r\n                            提交\r\n                        </Button>,\r\n                    ]}\r\n                >\r\n                <Form>\r\n                    <Form.Item {...layoutBable} label=\"客户名称\">\r\n                        {getFieldDecorator('caseName', {\r\n                            rules: [{ required: true, message: '必填' }],\r\n                        })(\r\n                            <Input style={{width:200}}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item {...layoutBable} label=\"性别\">\r\n                        {getFieldDecorator('sex')(\r\n                            <Radio.Group style={{width:200}}>\r\n                                <Radio value={1}>男</Radio>\r\n                                <Radio value={2}>女</Radio>\r\n                            </Radio.Group>\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item {...layoutBable} label=\"电话\">\r\n                        {getFieldDecorator('phone', {\r\n                            rules: [{ required: true, message: '必填' }],\r\n                        })(\r\n                            <Input style={{width:200}}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item {...layoutBable} label=\"身份证信息\">\r\n                        {getFieldDecorator('cardInfo', {\r\n                            rules: [{ required: true, message: '必填' }],\r\n                        })(\r\n                            <Input style={{width:200}}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item {...layoutBable} label=\"创建时间\">\r\n                        {getFieldDecorator('createTime', {\r\n                            rules: [{ required: true, message: '必填' }],\r\n                        })(\r\n                            <Input style={{width:200}}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                </Form>\r\n                </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nFormCuster = Form.create({})(FormCuster)\r\nexport default FormCuster\r\n","import request from \"../../until/request\"\r\n\r\nexport function getCuster(data){\r\n     return request({\r\n         url:'/lawyer/custerlist',\r\n         method:'get',\r\n         params:data,\r\n     })\r\n}\r\n\r\nexport function editCuster(data){\r\n    return request({\t\r\n        url:'/lawyer/infoedit',\r\n        method:'get',\r\n        params:data,\r\n    })\r\n}\r\n\r\nexport function addCuster(data){\r\n    return request({\t\r\n        url:'/lawyer/add',\r\n        method:'get',\r\n        params:data,\r\n    })\r\n}","import React from 'react';\r\nimport {LocaleProvider, Card, Form, Button, Input, Table} from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport {getcusterlist} from \"@/redux/action/custer/custer\"\r\nimport Alerts from '../../../components/alert/index'\r\nimport zh_CN from 'antd/lib/locale-provider/zh_CN';\r\nimport ModalLeft from '../component/case/modal'\r\nimport DrawNodal from '../component/custer/forms'\r\nconst FormItem = Form.Item\r\nclass LawyerCase extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            data:[],\r\n            choose:0,\r\n            selectedRowKeys:[],\r\n            pagination:{  //分页参数\r\n                current:1,\r\n                pageSize:5,\r\n                pageSizeOptions:['5','10','15','20'],\r\n                showQuickJumper:true,\r\n                showSizeChanger:true,\r\n                showTotal:(total, range)=>{\r\n                   return '共'+total+'页'\r\n                },\r\n                total:30\r\n            },\r\n            visible:false,//新增开关draw\r\n            visibles:false, //跟踪开关\r\n            loading:false,\r\n            title:''\r\n        }\r\n    }\r\n    params={\r\n        current:\"\",\r\n        pageSize:\"\"\r\n    }\r\n    componentWillMount(){\r\n    }\r\n    componentWillReceiveProps(nextProps,oldProps){\r\n        let custitem=nextProps.custlist!=undefined?(nextProps.custlist.item_list).toString():''\r\n        let oldcust=oldProps.custlist!=undefined?(oldProps.custlist.item_list).toString():''\r\n         if(custitem!=oldcust&&custitem!=''){\r\n                 this.setState({\r\n                     data:nextProps.custlist.item_list,\r\n                     pagination:{\r\n                        current:nextProps.custlist.page,\r\n                        pageSize:nextProps.custlist.page_size,\r\n                        total:nextProps.custlist.total_count\r\n                     }\r\n                 })\r\n         }\r\n    }\r\n    //数据请求\r\n    requestList(){\r\n        let datas=this.inputVal.props.form.getFieldsValue();\r\n            for(let key in datas){\r\n                this.params[key]=datas[key]===undefined?'':datas[key]\r\n            }\r\n            this.setState({\r\n                choose:0,\r\n                selectedRowKeys:[]\r\n            })\r\n        this.props.getcusterlist(this.params)\r\n    }\r\n    //清空事件\r\n    clear=()=>{\r\n        this.setState({\r\n            choose:0,\r\n            selectedRowKeys:[]\r\n        })\r\n    }\r\n    //分页\r\n    changePagination=(pagination, filters, sorter)=>{\r\n        this.setState({\r\n            pagination:pagination\r\n        })\r\n        this.params.current=pagination.current\r\n        this.params.pageSize=pagination.pageSize\r\n        this.requestList()\r\n        \r\n    }\r\n    onRef = (ref) => {\r\n        this.child = ref\r\n    }\r\n    //编辑\r\n    handleEdit=(record)=>{\r\n        this.setState({visibles:true})\r\n        this.child.params.title=\"编辑\"\r\n        this.child.myName(record)\r\n    }\r\n    //编辑确认\r\n    handleEditOk=()=>{\r\n         this.setState({visibles:false})\r\n         this.requestList()\r\n    }\r\n    componentDidMount(){\r\n        this.requestList()\r\n    }\r\n    //重置\r\n    restVal=()=>{\r\n       this.inputVal.props.form.resetFields()\r\n       this.requestList()\r\n    }\r\n    //查询\r\n    check=()=>{\r\n       this.requestList()\r\n    }\r\n   \r\n    render() {\r\n            const rowSelection={\r\n                type:'checkbox',\r\n                selectedRowKeys:this.state.selectedRowKeys,\r\n                onChange:(selectedRowKeys, selectedRows)=>{\r\n                   this.setState({\r\n                       selectedRowKeys,\r\n                       choose:selectedRowKeys.length\r\n                   })\r\n                }\r\n            }\r\n            const columns = [\r\n                  {\r\n                    title: \"序号\",\r\n                    dataIndex: \" \",\r\n                    key: \"rowIndex\",\r\n                    width: 60,\r\n                    align: \"center\",\r\n                    render: function(t, r, index) {\r\n                      return parseInt(index) + 1;\r\n                    }\r\n                  },\r\n                  {\r\n                    title: '客户名称',\r\n                    align:\"center\",\r\n                    dataIndex: 'caseName'\r\n                   },\r\n                   {\r\n                    title: '性别',\r\n                    align:\"center\",\r\n                    dataIndex: 'sex',\r\n                    render:(sex)=>{\r\n                       return {\r\n                         '1':'男',\r\n                         '2':'女'\r\n                        }[sex]\r\n                    }\r\n                   },\r\n                   {\r\n                    title: '电话',\r\n                    align:\"center\",\r\n                    dataIndex: 'phone'\r\n                   },\r\n                   {\r\n                    title: '身份证信息',\r\n                    align:\"center\",\r\n                    dataIndex: 'cardInfo'\r\n                   },\r\n                   {\r\n                    title: '创建时间',\r\n                    align:\"center\",\r\n                    dataIndex: 'createTime'\r\n                   },\r\n                  {\r\n                      title: '操作',\r\n                      key: 'operation',\r\n                      width: 100,\r\n                      render: (text, record, index) => (<span><a href=\"javascript:;\" onClick={()=>{this.handleEdit(record)}} style={{color:'green'}}>编辑</a>&nbsp;&nbsp;<a href=\"javascript:;\">详情</a></span>),\r\n                  },\r\n        ];\r\n            const data=[\r\n               {\r\n                   custName:'陈凯',\r\n                   createTime:'2019-0-9',\r\n                   phone:223,\r\n                   cardInfo:\"三空间看\",\r\n                   sex:'城市里'\r\n               },\r\n               {\r\n                custName:'陈凯',\r\n                createTime:'2019-0-9',\r\n                phone:2232,\r\n                cardInfo:\"三空间看\",\r\n                sex:'城市里'\r\n            }\r\n           ]\r\n           return (\r\n            <div>\r\n                <Card>\r\n                    <FormValues check={this.check} restVal={this.restVal} wrappedComponentRef={(val)=>{this.inputVal=val}} />\r\n                    <div className=\"centerBtn\">\r\n                        <Button type='dashed' onClick={()=>{\r\n                        this.child.props.form.resetFields()\r\n                        this.child.params.title=\"新增\"\r\n                        this.setState({visibles:true,title:'新增'})\r\n                         }\r\n                        } \r\n                        icon='plus'>新增</Button>\r\n                        <Button type='default'>批量操作</Button>\r\n                        <Button type='default'>...</Button>\r\n                    </div>\r\n                    <Alerts choose={this.state.choose} clear={this.clear} />\r\n                    {/* 新增模态框 */}\r\n                    <ModalLeft visible={this.state.visible} visibleclose={()=>{this.setState({visible:false})}}/>\r\n                    {/* 跟踪模态框 */}\r\n                    <DrawNodal onRef={this.onRef} handleEditOk={this.handleEditOk}  visible={this.state.visibles} loading={this.state.loading} handleCancel={()=>{this.setState({visibles:false})}}/>\r\n                    <LocaleProvider locale={zh_CN}><Table onChange={this.changePagination} columns={columns} dataSource={this.state.data} pagination={this.state.pagination} rowSelection={rowSelection}/></LocaleProvider>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>({\r\n     custlist:state.custer.cust\r\n})\r\nclass FormValue extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            show: true\r\n        }\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form layout='inline'>\r\n                <FormItem label=\"被告人\">\r\n                    {getFieldDecorator('username', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '必填！',\r\n                            },\r\n                        ],\r\n                    })(<Input placeholder=\"请输入\" />)}\r\n                </FormItem>\r\n                <FormItem label=\"联系电话\">\r\n                    {getFieldDecorator('number', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '必填！',\r\n                            },\r\n                        ],\r\n                    })(<Input placeholder=\"请输入电话号码\" />)}\r\n                </FormItem>\r\n                {\r\n                    this.state.show ? (<FormItem label=\"身份证号码\">\r\n                        {getFieldDecorator('usernumber', {\r\n                            rules: [\r\n                                {\r\n                                    required: true,\r\n                                    message: '必填！',\r\n                                },\r\n                            ],\r\n                        })(<Input placeholder=\"请输入身份证号码\" />)}\r\n                    </FormItem>) : null\r\n                }\r\n                <FormItem>\r\n                    <Button type=\"primary\" onClick={this.props.check}> 查询</Button>\r\n                    <Button type=\"primary\" onClick={this.props.restVal}> 重置</Button>\r\n                    {\r\n                        this.state.show ? (<a onClick={() => this.setState({ show: false })}>收起</a>) : (<a onClick={() => this.setState({ show: true })}>展开</a>)\r\n                    }\r\n                </FormItem>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nconst FormValues = Form.create({})(FormValue);\r\n\r\nexport default connect(mapStateToProps,{getcusterlist})(LawyerCase);\r\n\r\n","import React from 'react'\r\nimport {Switch,Route,HashRouter,Redirect}from 'react-router-dom'\r\nimport PrivateRoute from '@/components/common/proviteRouter'\r\nimport Admin from '../layout.js'\r\nimport Login from '../views/login'\r\nimport NOfound from '../views/404'\r\nimport App from '../App.js'\r\n//admin路由\r\n//home\r\nimport Home from '../views/home'\r\n//ui\r\nimport Buttons from '../views/ui/buttons'\r\nimport Modals from '../views/ui/alert'\r\nimport Loadings from '../views/ui/loadings'\r\nimport Messages from '../views/ui/messages'\r\nimport Notifications from '../views/ui/notification'\r\nimport Tabs from '../views/ui/tabs'\r\n//form\r\nimport Logins from '../views/form/login'\r\nimport Regs from '../views/form/reg'\r\n//table\r\nimport Tables from '../views/table/tables'\r\n//city\r\nimport Citys from '../views/city'\r\n//order\r\nimport Orders from '../views/order'\r\nimport Commons from '../common.js'\r\nimport Derails from '../views/order/derail'\r\n//user\r\nimport Users from '../views/user'\r\n//bikemap\r\nimport BikeMaps from '../views/bikemap'\r\n//rich\r\nimport Richs from '../views/rich'\r\n//permission\r\nimport Permissions from '../views/permission'\r\n//echarts\r\nimport Echarts from '../views/echarts'\r\n//律师管理组件\r\nimport LawyerHome from '../views/Lawyer/home'\r\nimport LawyerTeam from '../views/Lawyer/team'\r\nimport LawyerCase from '../views/Lawyer/case'\r\nimport LawyerCuster from '../views/Lawyer/custer'\r\n\r\nexport default class extends React.Component{\r\n    render(){\r\n        return(\r\n             <HashRouter>\r\n                 <App>\r\n                 <Switch>\r\n                 <Route path=\"/login\" component={Login} ></Route>\r\n                 <Route path=\"/common\" render={()=>\r\n                        <Commons>\r\n                            <Switch>\r\n                              <PrivateRoute path=\"/common/order/derails/:id\" component={Derails}></PrivateRoute>\r\n                            </Switch>\r\n                        </Commons>\r\n                 }></Route>\r\n                 <Route path=\"/\" render={()=>\r\n                      <Admin>\r\n                          <Switch>\r\n                              <PrivateRoute path=\"/home\" component={Home}></PrivateRoute>                              \r\n                              <PrivateRoute path=\"/ui/buttons\" component={Buttons}></PrivateRoute>\r\n                              <PrivateRoute path=\"/ui/modals\" component={Modals}></PrivateRoute>\r\n                              <PrivateRoute path=\"/ui/loadings\" component={Loadings}></PrivateRoute>\r\n                              <PrivateRoute path=\"/ui/messages\" component={Messages}></PrivateRoute>\r\n                              <PrivateRoute path=\"/ui/tabs\" component={Tabs}></PrivateRoute>                              \r\n                              <PrivateRoute path=\"/ui/notification\" component={Notifications}></PrivateRoute>\r\n                              <PrivateRoute path=\"/form/login\" component={Logins}></PrivateRoute>\r\n                              <PrivateRoute path=\"/form/reg\" component={Regs}></PrivateRoute>\r\n                              <PrivateRoute path=\"/table/basic\" component={Tables}></PrivateRoute>\r\n                              <PrivateRoute path=\"/city\" component={Citys}></PrivateRoute>\r\n                              <PrivateRoute path=\"/order\" component={Orders}></PrivateRoute>\r\n                              <PrivateRoute path=\"/user\" component={Users}></PrivateRoute>\r\n                              <PrivateRoute path=\"/bikeMap\" component={BikeMaps}></PrivateRoute>\r\n                              <PrivateRoute path=\"/rich\" component={Richs}></PrivateRoute>\r\n                              <PrivateRoute path=\"/permission\" component={Permissions}></PrivateRoute>\r\n                              <PrivateRoute path=\"/charts/bar\" component={Echarts}></PrivateRoute>\r\n                              <PrivateRoute path=\"/lawyer/home\" component={LawyerHome}></PrivateRoute>\r\n                              <PrivateRoute path='/lawyer/team' component={LawyerTeam}></PrivateRoute>\r\n                              <PrivateRoute path='/lawyer/case' component={LawyerCase}></PrivateRoute>\r\n                              <PrivateRoute path='/lawyer/custer' component={LawyerCuster}></PrivateRoute>\r\n                              <Redirect to={'/home'}/>\r\n                              <PrivateRoute component={NOfound}></PrivateRoute>\r\n                          </Switch>\r\n                      </Admin>\r\n                }></Route>\r\n                 \r\n                 <Route component={NOfound}></Route>\r\n                 </Switch>\r\n                 </App>\r\n             </HashRouter>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux'\r\nimport './index.css';\r\nimport store from './redux/store/index'\r\nimport Router from './router'\r\nimport * as serviceWorker from './serviceWorker';\r\nconsole.log(store.getState())\r\nReactDOM.render(<Provider store={store}><Router /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}